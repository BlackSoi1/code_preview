{"question_id": 0, "response": "WITH eur_count AS (\n  SELECT COUNT(*) as eur_cnt \n  FROM customers \n  WHERE currency = 'EUR'\n),\nczk_count AS (\n  SELECT COUNT(*) as czk_cnt\n  FROM customers\n  WHERE currency = 'CZK'\n)\nSELECT CAST(eur_cnt AS FLOAT) / czk_cnt as result\nFROM eur_count, czk_count;"}
{"question_id": 1, "response": "WITH filtered_data AS (\n    SELECT c.CustomerID, y.Consumption\n    FROM customers c\n    INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID\n    WHERE c.Segment = 'LAM' AND SUBSTRING(y.Date, 1, 4) = '2012'\n)\nSELECT CustomerID\nFROM (\n    SELECT CustomerID, SUM(Consumption) as total_consumption\n    FROM filtered_data\n    GROUP BY CustomerID\n) t\nWHERE total_consumption = (\n    SELECT MIN(total_consumption)\n    FROM (\n        SELECT CustomerID, SUM(Consumption) as total_consumption\n        FROM filtered_data\n        GROUP BY CustomerID\n    ) s\n)\nLIMIT 1;"}
{"question_id": 2, "response": "WITH filtered_data AS (\n    SELECT c.CustomerID, y.Consumption\n    FROM customers c\n    INNER JOIN yearmonth y ON c.CustomerID = y.CustomerID \n    WHERE c.Segment = 'SME'\n    AND SUBSTRING(y.Date, 1, 4) = '2013'\n)\nSELECT (SUM(Consumption) / COUNT(DISTINCT CustomerID)) / 12 as result\nFROM filtered_data"}
{"question_id": 4, "response": "WITH merged AS (\n    SELECT c.*, y.date, y.consumption \n    FROM customers c \n    INNER JOIN yearmonth y ON c.customerid = y.customerid\n),\nfiltered AS (\n    SELECT *, SUBSTRING(date, 1, 4) as year\n    FROM merged \n    WHERE currency = 'CZK'\n),\ngrouped AS (\n    SELECT year, SUM(consumption) as total_consumption\n    FROM filtered\n    GROUP BY year\n)\nSELECT year \nFROM grouped\nORDER BY total_consumption DESC\nLIMIT 1;"}
{"question_id": 5, "response": "WITH filtered_data AS (\n    SELECT y.date, y.consumption\n    FROM customers c\n    INNER JOIN yearmonth y ON c.customerid = y.customerid\n    WHERE c.segment = 'SME' \n    AND SUBSTRING(y.date, 1, 4) = '2013'\n)\nSELECT SUBSTRING(date, 5, 2) as month\nFROM filtered_data\nGROUP BY SUBSTRING(date, 5, 2)\nORDER BY SUM(consumption) DESC\nLIMIT 1;"}
{"question_id": 6, "response": "WITH filtered_data AS (\n    SELECT c.customerid, c.segment, y.consumption\n    FROM customers c\n    INNER JOIN yearmonth y ON c.customerid = y.customerid\n    WHERE c.currency = 'CZK'\n    AND y.date BETWEEN '201301' AND '201312'\n    AND y.consumption = (\n        SELECT MIN(y2.consumption)\n        FROM customers c2\n        INNER JOIN yearmonth y2 ON c2.customerid = y2.customerid\n        WHERE c2.currency = 'CZK'\n        AND y2.date BETWEEN '201301' AND '201312'\n    )\n),\nsegment_stats AS (\n    SELECT\n        COALESCE(SUM(CASE WHEN segment = 'SME' THEN consumption END) / NULLIF(COUNT(DISTINCT CASE WHEN segment = 'SME' THEN customerid END), 0), 0) as sme_avg,\n        COALESCE(SUM(CASE WHEN segment = 'LAM' THEN consumption END) / NULLIF(COUNT(DISTINCT CASE WHEN segment = 'LAM' THEN customerid END), 0), 0) as lam_avg,\n        COALESCE(SUM(CASE WHEN segment = 'KAM' THEN consumption END) / NULLIF(COUNT(DISTINCT CASE WHEN segment = 'KAM' THEN customerid END), 0), 0) as kam_avg\n    FROM filtered_data\n)\nSELECT \n    sme_avg - lam_avg as sme_lam_diff,\n    lam_avg - kam_avg as lam_kam_diff,\n    kam_avg - sme_avg as kam_sme_diff\nFROM segment_stats;"}
{"question_id": 7, "response": "WITH filtered_data AS (\n    SELECT c.customerid, c.segment, y.date, y.consumption\n    FROM customers c\n    INNER JOIN yearmonth y ON c.customerid = y.customerid\n    WHERE c.currency = 'EUR'\n),\nsegment_totals AS (\n    SELECT \n        segment,\n        SUM(CASE WHEN date LIKE '2012%' THEN consumption ELSE 0 END) as total_2012,\n        SUM(CASE WHEN date LIKE '2013%' THEN consumption ELSE 0 END) as total_2013\n    FROM filtered_data\n    GROUP BY segment\n)\nSELECT \n    segment,\n    ROUND(((total_2013 - total_2012) / NULLIF(total_2012, 0) * 100)::numeric, 3) as percentage_increase\nFROM segment_totals\nWHERE segment IN ('SME', 'LAM', 'KAM')\nORDER BY segment;"}
{"question_id": 10, "response": "WITH sme_customers AS (\n    SELECT *\n    FROM customers \n    WHERE segment = 'SME'\n),\ncurrency_counts AS (\n    SELECT \n        COUNT(CASE WHEN currency = 'CZK' THEN 1 END) as czk_count,\n        COUNT(CASE WHEN currency = 'EUR' THEN 1 END) as eur_count\n    FROM sme_customers\n)\nSELECT (czk_count - eur_count) as result\nFROM currency_counts;"}
{"question_id": 11, "response": "WITH merged AS (\n    SELECT c.*, y.consumption \n    FROM customers c \n    INNER JOIN yearmonth y ON c.customerid = y.customerid\n),\nlam_customers AS (\n    SELECT * FROM merged WHERE segment = 'LAM'\n),\nconsumed_more AS (\n    SELECT COUNT(DISTINCT customerid) as consumed_more_count\n    FROM lam_customers \n    WHERE consumption > 46.73\n),\ntotal_lam AS (\n    SELECT COUNT(DISTINCT customerid) as total_count\n    FROM lam_customers\n)\nSELECT (consumed_more.consumed_more_count::float / total_lam.total_count::float) * 100 as result\nFROM consumed_more, total_lam;"}
{"question_id": 12, "response": "WITH filtered_data AS (\n  SELECT *\n  FROM yearmonth\n  WHERE date = '201202'\n),\ncounts AS (\n  SELECT \n    COUNT(CASE WHEN consumption > 528.3 THEN 1 END) AS count_above,\n    COUNT(customerid) AS total_customers\n  FROM filtered_data\n)\nSELECT (count_above::float / total_customers * 100) as result\nFROM counts;"}
{"question_id": 13, "response": "WITH filtered_data AS (\n  SELECT \n    SUBSTRING(date, 1, 4) AS year,\n    SUBSTRING(date, 5, 2) AS month,\n    consumption\n  FROM yearmonth\n  WHERE SUBSTRING(date, 1, 4) = '2012'\n),\nmonthly_sums AS (\n  SELECT month, SUM(consumption) as total_consumption\n  FROM filtered_data\n  GROUP BY month\n)\nSELECT ROUND(MAX(total_consumption)::numeric, 1) as result\nFROM monthly_sums;"}
{"question_id": 14, "response": "SELECT DISTINCT p.description \nFROM transactions_1k t\nINNER JOIN yearmonth y ON t.customerid = y.customerid\nINNER JOIN products p ON t.productid = p.productid\nWHERE y.date = '201309'"}
{"question_id": 15, "response": "SELECT DISTINCT g.country \nFROM transactions_1k t \nINNER JOIN gasstations g ON t.gasstationid = g.gasstationid \nWHERE t.date::text LIKE '2012-08%'"}
{"question_id": 17, "response": "SELECT DISTINCT p.description\nFROM transactions_1k t\nINNER JOIN gasstations g ON t.gasstationid = g.gasstationid\nINNER JOIN products p ON t.productid = p.productid\nWHERE g.country = 'CZE'"}
{"question_id": 18, "response": "SELECT DISTINCT t.time \nFROM transactions_1k t \nINNER JOIN gasstations g ON t.gasstationid = g.gasstationid \nWHERE g.chainid = 11;"}
{"question_id": 19, "response": "SELECT COUNT(t.TransactionID)\nFROM transactions_1k t\nINNER JOIN gasstations g ON t.GasStationID = g.GasStationID \nWHERE g.Country = 'CZE'\nAND EXTRACT(YEAR FROM t.Date) >= 2012;"}
{"question_id": 22, "response": "SELECT COUNT(*)\nFROM transactions_1k t\nINNER JOIN gasstations g ON t.gasstationid = g.gasstationid \nWHERE t.date = '2012-08-26'\nAND t.time >= '08:00:00' \nAND t.time <= '09:00:00'\nAND g.country = 'CZE';"}
{"question_id": 23, "response": "SELECT gs.country \nFROM transactions_1k t\nINNER JOIN gasstations gs ON t.gasstationid = gs.gasstationid\nWHERE t.date = '2012-08-24' AND t.price = 548.4\nLIMIT 1;"}
{"question_id": 24, "response": "WITH filtered_data AS (\n    SELECT DISTINCT t.customerid\n    FROM transactions_1k t\n    INNER JOIN customers c ON t.customerid = c.customerid \n    WHERE t.date = '2012-08-25'\n),\neur_count AS (\n    SELECT COUNT(DISTINCT t.customerid) AS eur_customers\n    FROM transactions_1k t\n    INNER JOIN customers c ON t.customerid = c.customerid\n    WHERE t.date = '2012-08-25' AND c.currency = 'EUR'\n),\ntotal_count AS (\n    SELECT COUNT(DISTINCT customerid) AS total_customers\n    FROM filtered_data\n)\nSELECT (eur_count.eur_customers::float / total_count.total_customers) * 100 AS result\nFROM eur_count, total_count;"}
{"question_id": 26, "response": "WITH total_svk AS (\n    SELECT COUNT(*) as total_count,\n    SUM(CASE WHEN segment = 'Premium' THEN 1 ELSE 0 END) as premium_count\n    FROM gasstations\n    WHERE country = 'SVK'\n)\nSELECT (premium_count::float / total_count) * 100 as result\nFROM total_svk;"}
{"question_id": 27, "response": "SELECT \n    SUM(t.price) as total_spent,\n    SUM(CASE WHEN TO_CHAR(t.date, 'YYYY-MM') = '2012-08' THEN t.price ELSE 0 END) as august_spent\nFROM transactions_1k t\nINNER JOIN gasstations g ON t.gasstationid = g.gasstationid\nWHERE t.customerid = 38508;"}
{"question_id": 29, "response": "WITH merged AS (\n  SELECT t.*, y.date as date_y, y.consumption\n  FROM transactions_1k t\n  INNER JOIN yearmonth y ON t.customerid = y.customerid\n),\nfiltered AS (\n  SELECT DISTINCT consumption\n  FROM (\n    SELECT *,\n      price::float / amount::float as price_per_unit\n    FROM merged\n    WHERE amount > 0\n  ) calc\n  WHERE price_per_unit > 29.00\n  AND productid = 5 \n  AND date_y = '201208'\n)\nSELECT consumption FROM filtered;"}
{"question_id": 30, "response": "SELECT major.major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Angela' \nAND member.last_name = 'Sanders'\nLIMIT 1;"}
{"question_id": 33, "response": "WITH grouped_events AS (\n  SELECT e.event_id, e.event_name\n  FROM event e\n  INNER JOIN attendance a ON e.event_id = a.link_to_event\n  GROUP BY e.event_id, e.event_name\n  HAVING COUNT(*) > 20\n)\nSELECT DISTINCT event_name \nFROM grouped_events g\nINNER JOIN event e ON g.event_id = e.event_id\nWHERE e.type != 'Fundraiser';"}
{"question_id": 34, "response": "SELECT SUM(i.amount)\nFROM member m\nINNER JOIN income i ON m.member_id = i.link_to_member\nWHERE m.position = 'Vice President'"}
{"question_id": 35, "response": "SELECT m.first_name, m.last_name\nFROM member m\nINNER JOIN zip_code z ON m.zip = z.zip_code\nWHERE z.state = 'Illinois'"}
{"question_id": 36, "response": "SELECT e.approved\nFROM event ev\nINNER JOIN budget b ON ev.event_id = b.link_to_event\nINNER JOIN expense e ON b.budget_id = e.link_to_budget\nWHERE ev.event_name = 'October Meeting' \nAND ev.event_date LIKE '2019-10-08%'"}
{"question_id": 37, "response": "SELECT AVG(e.cost)\nFROM member m\nINNER JOIN expense e ON m.member_id = e.link_to_member\nWHERE m.last_name = 'Allen'\nAND m.first_name = 'Elijah'\nAND SUBSTRING(e.expense_date, 6, 2) IN ('09', '10');"}
{"question_id": 38, "response": "WITH merged AS (\n  SELECT e.*, b.spent\n  FROM event e\n  INNER JOIN budget b ON e.event_id = b.link_to_event\n),\nyearly_spent AS (\n  SELECT \n    CAST(SUBSTRING(event_date, 1, 4) AS TEXT) AS year,\n    SUM(CAST(spent AS NUMERIC)) as total_spent\n  FROM merged\n  WHERE SUBSTRING(event_date, 1, 4) IN ('2019', '2020')\n  GROUP BY SUBSTRING(event_date, 1, 4)\n)\nSELECT ROUND(CAST(\n  (SELECT total_spent FROM yearly_spent WHERE year = '2019') - \n  (SELECT total_spent FROM yearly_spent WHERE year = '2020') \nAS NUMERIC), 2) as result;"}
{"question_id": 39, "response": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14';"}
{"question_id": 44, "response": "SELECT DISTINCT m2.department \nFROM member m1 \nINNER JOIN major m2 ON m1.link_to_major = m2.major_id \nWHERE m1.position = 'President'"}
{"question_id": 45, "response": "SELECT i.date_received\nFROM member m\nINNER JOIN income i ON m.member_id = i.link_to_member\nWHERE m.first_name = 'Connor'\nAND m.last_name = 'Hilton'\nAND i.source = 'Dues'"}
{"question_id": 46, "response": "WITH filtered_data AS (\n    SELECT b.amount\n    FROM budget b\n    INNER JOIN event e ON b.link_to_event = e.event_id\n    WHERE b.category = 'Advertisement' \n    AND e.type = 'Meeting'\n    AND e.event_name IN ('Yearly Kickoff', 'October Meeting')\n)\nSELECT \n    (SELECT SUM(amount) FROM filtered_data WHERE event_name = 'Yearly Kickoff') /\n    (SELECT SUM(amount) FROM filtered_data WHERE event_name = 'October Meeting') AS result;"}
{"question_id": 47, "response": "SELECT SUM(cost) \nFROM expense \nWHERE expense_description = 'Pizza';"}
{"question_id": 49, "response": "SELECT major_name\nFROM member\nINNER JOIN major ON member.link_to_major = major.major_id\nWHERE member.phone = '809-555-3360'\nLIMIT 1;"}
{"question_id": 50, "response": "SELECT COUNT(a.link_to_member)\nFROM event e\nINNER JOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.event_name = 'Women''s Soccer';"}
{"question_id": 52, "response": "WITH closed_events AS (\n  SELECT \n    e.event_name,\n    b.spent::float / b.amount AS spend_to_budget_ratio\n  FROM budget b\n  INNER JOIN event e ON b.link_to_event = e.event_id\n  WHERE e.status = 'Closed'\n)\nSELECT event_name\nFROM closed_events\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;"}
{"question_id": 55, "response": "WITH event_counts AS (\n  SELECT link_to_member, COUNT(*) as event_count\n  FROM attendance\n  GROUP BY link_to_member\n  HAVING COUNT(*) > 7\n)\nSELECT m.first_name, m.last_name\nFROM member m\nINNER JOIN event_counts e ON m.member_id = e.link_to_member;"}
{"question_id": 56, "response": "SELECT DISTINCT m.first_name, m.last_name\nFROM event e\nINNER JOIN budget b ON e.event_id = b.link_to_event\nINNER JOIN expense ex ON b.budget_id = ex.link_to_budget\nINNER JOIN member m ON ex.link_to_member = m.member_id\nWHERE e.event_name = 'Yearly Kickoff'"}
{"question_id": 59, "response": "WITH filtered_income AS (\n    SELECT source\n    FROM income\n    WHERE date_received >= '2019-09-01' AND date_received <= '2019-09-30'\n    ORDER BY source DESC\n    LIMIT 1\n)\nSELECT source FROM filtered_income;"}
{"question_id": 60, "response": "SELECT COUNT(member_id)\nFROM major \nINNER JOIN member ON major.major_id = member.link_to_major\nWHERE major_name = 'Physics Teaching';"}
{"question_id": 61, "response": "SELECT e.event_name\nFROM budget b\nINNER JOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Advertisement'\nORDER BY b.spent DESC\nLIMIT 1;"}
{"question_id": 63, "response": "SELECT e.cost \nFROM event ev\nJOIN budget b ON ev.event_id = b.link_to_event\nJOIN expense e ON b.budget_id = e.link_to_budget\nWHERE ev.event_name = 'September Speaker'\nAND e.expense_description = 'Posters'\nLIMIT 1;"}
{"question_id": 64, "response": "SELECT event_name\nFROM budget\nINNER JOIN event ON budget.link_to_event = event.event_id\nWHERE event_status = 'Closed' AND remaining < 0\nORDER BY remaining\nLIMIT 1;"}
{"question_id": 65, "response": "WITH merged AS (\n    SELECT e.*, b.budget_id, ex.cost, ex.type\n    FROM event e\n    INNER JOIN budget b ON e.event_id = b.link_to_event\n    INNER JOIN expense ex ON b.budget_id = ex.link_to_budget\n    WHERE e.event_name = 'October Meeting'\n)\nSELECT type, SUM(cost) as cost\nFROM merged\nGROUP BY type;"}
{"question_id": 66, "response": "SELECT b.category, SUM(b.amount) as amount\nFROM event e\nINNER JOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'April Speaker'\nGROUP BY b.category\nORDER BY SUM(b.amount) ASC;"}
{"question_id": 69, "response": "SELECT e.expense_description\nFROM member m\nINNER JOIN expense e ON m.member_id = e.link_to_member\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';"}
{"question_id": 70, "response": "SELECT DISTINCT b.category\nFROM event e\nINNER JOIN budget b ON e.event_id = b.link_to_event\nWHERE e.location = 'MU 215';"}
{"question_id": 73, "response": "WITH filtered_data AS (\n  SELECT m.*, i.*\n  FROM member m\n  INNER JOIN income i ON m.member_id = i.link_to_member\n  WHERE m.position = 'Member' AND m.t_shirt_size = 'Medium'\n),\ncounts AS (\n  SELECT \n    COUNT(CASE WHEN amount = 50 THEN 1 END)::float AS amount_50_count,\n    COUNT(income_id)::float AS total_count\n  FROM filtered_data\n)\nSELECT (amount_50_count / total_count * 100) AS percentage\nFROM counts;"}
{"question_id": 74, "response": "SELECT DISTINCT event_name\nFROM event\nWHERE type = 'Game'\nAND CAST(SUBSTRING(event_date, 1, 10) AS DATE) >= '2019-03-15'\nAND CAST(SUBSTRING(event_date, 1, 10) AS DATE) <= '2020-03-20'\nAND status = 'Closed';"}
{"question_id": 75, "response": "WITH avg_cost AS (\n    SELECT AVG(cost) as average_cost \n    FROM expense\n)\nSELECT DISTINCT m.first_name, m.last_name, m.phone\nFROM expense e\nINNER JOIN budget b ON e.link_to_budget = b.budget_id \nINNER JOIN member m ON e.link_to_member = m.member_id\nWHERE e.cost > (SELECT average_cost FROM avg_cost);"}
{"question_id": 77, "response": "SELECT DISTINCT m.first_name, m.last_name, i.amount\nFROM event e\nINNER JOIN attendance a ON e.event_id = a.link_to_event\nINNER JOIN member m ON a.link_to_member = m.member_id\nINNER JOIN income i ON m.member_id = i.link_to_member\nWHERE i.date_received = '2019-09-09'"}
{"question_id": 78, "response": "WITH male_patients AS (\n  SELECT *\n  FROM Patient \n  WHERE SEX = 'M'\n),\ncounts AS (\n  SELECT \n    COUNT(CASE WHEN Admission = '+' THEN 1 END) as in_patient_count,\n    COUNT(CASE WHEN Admission = '-' THEN 1 END) as out_patient_count\n  FROM male_patients\n)\nSELECT \n  (in_patient_count * 100.0) / out_patient_count as result\nFROM counts;"}
{"question_id": 79, "response": "WITH female_patients AS (\n    SELECT * FROM Patient WHERE SEX = 'F'\n),\nborn_after_1930 AS (\n    SELECT * FROM female_patients \n    WHERE CAST(SUBSTRING(Birthday, 1, 4) AS INTEGER) > 1930\n)\nSELECT \n    (CAST(COUNT(born_after_1930.ID) AS FLOAT) / CAST(COUNT(female_patients.ID) AS FLOAT) * 100) as percentage\nFROM female_patients\nLEFT JOIN born_after_1930 ON 1=1;"}
{"question_id": 80, "response": "WITH sle_patients AS (\n  SELECT *\n  FROM Patient \n  WHERE Diagnosis = 'SLE'\n),\ncounts AS (\n  SELECT \n    COUNT(CASE WHEN Admission = '+' THEN 1 END) AS inpatient_count,\n    COUNT(CASE WHEN Admission = '-' THEN 1 END) AS outpatient_count\n  FROM sle_patients\n)\nSELECT \n  CAST(inpatient_count AS DECIMAL) / outpatient_count AS result\nFROM counts;"}
{"question_id": 81, "response": "SELECT p.Diagnosis, l.Date\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID = 30609;"}
{"question_id": 82, "response": "SELECT DISTINCT p.ID, p.SEX, p.Birthday\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH > 500"}
{"question_id": 83, "response": "WITH current_year AS (\n  SELECT EXTRACT(YEAR FROM CURRENT_DATE) as year\n),\nmerged AS (\n  SELECT p.*, e.*\n  FROM Patient p\n  INNER JOIN Examination e ON p.ID = e.ID\n),\nfiltered AS (\n  SELECT *,\n    (SELECT year FROM current_year) - EXTRACT(YEAR FROM Birthday::DATE) as age\n  FROM merged\n  WHERE RVVT = '+'\n)\nSELECT DISTINCT ID, age\nFROM filtered;"}
{"question_id": 84, "response": "SELECT DISTINCT p.ID, p.SEX, p.Diagnosis\nFROM Patient p\nINNER JOIN Examination e ON p.ID = e.ID \nWHERE e.Thrombosis = 2;"}
{"question_id": 85, "response": "SELECT COUNT(*)\nFROM Patient\nWHERE EXTRACT(YEAR FROM Description::timestamp) = 1997\nAND SEX = 'F'\nAND Admission = '-'"}
{"question_id": 86, "response": "SELECT COUNT(*)\nFROM Patient p\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE p.SEX = 'F'\nAND EXTRACT(YEAR FROM e.\"Examination Date\") = 1997\nAND e.Thrombosis = 1"}
{"question_id": 87, "response": "SELECT e.symptoms, p.diagnosis\nFROM patient p\nINNER JOIN examination e ON p.id = e.id\nWHERE e.symptoms IS NOT NULL\nORDER BY p.birthday DESC\nLIMIT 1;"}
{"question_id": 89, "response": "WITH merged AS (\n  SELECT p.*, l.UA \n  FROM Patient p \n  INNER JOIN Laboratory l ON p.ID = l.ID\n),\ncounts AS (\n  SELECT \n    COUNT(DISTINCT CASE WHEN UA <= 8.0 AND SEX = 'M' THEN ID END) AS male_count,\n    COUNT(DISTINCT CASE WHEN UA <= 6.5 AND SEX = 'F' THEN ID END) AS female_count\n  FROM merged\n)\nSELECT CAST(male_count AS DECIMAL) / female_count AS result\nFROM counts;"}
{"question_id": 90, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE EXTRACT(YEAR FROM e.\"Examination Date\") BETWEEN 1990 AND 1993\nAND (EXTRACT(YEAR FROM e.\"Examination Date\") - EXTRACT(YEAR FROM p.\"Birthday\")) < 18"}
{"question_id": 91, "response": "WITH merged AS (\n  SELECT \n    p.*,\n    l.*,\n    EXTRACT(YEAR FROM l.date) - EXTRACT(YEAR FROM p.birthday) AS age\n  FROM patient p\n  INNER JOIN laboratory l ON p.id = l.id\n)\nSELECT \n  age,\n  diagnosis\nFROM merged\nWHERE hgb = (SELECT MAX(hgb) FROM merged)\nLIMIT 1;"}
{"question_id": 92, "response": "SELECT e.\"aCL IgM\"\nFROM Examination e\nINNER JOIN Patient p ON e.\"ID\" = p.\"ID\"\nWHERE p.\"Diagnosis\" = 'SLE'\nAND p.\"Description\" = '1994-02-19'\nAND e.\"Examination Date\" = '1993-11-12';"}
{"question_id": 93, "response": "WITH merged AS (\n    SELECT p.*, l.*\n    FROM Patient p\n    INNER JOIN Laboratory l ON p.ID = l.ID\n),\nfiltered AS (\n    SELECT *\n    FROM merged\n    WHERE Birthday = '1959-02-18'\n),\nnovember_sum AS (\n    SELECT SUM(\"T-CHO\") as nov_sum\n    FROM filtered \n    WHERE Date LIKE '1981-11%'\n),\ndecember_sum AS (\n    SELECT SUM(\"T-CHO\") as dec_sum\n    FROM filtered\n    WHERE Date LIKE '1981-12%'\n)\nSELECT (nov_sum - dec_sum) / dec_sum as result\nFROM november_sum, december_sum;"}
{"question_id": 94, "response": "SELECT DISTINCT ID\nFROM Laboratory\nWHERE Date >= '1987-07-06'\nAND Date <= '1996-01-31'\nAND GPT > 30\nAND ALB < 4;"}
{"question_id": 96, "response": "SELECT DISTINCT p.ID\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE p.Admission = '-'\nAND l.\"T-BIL\" < 2.0\nAND l.Date LIKE '1991-10%';"}
{"question_id": 97, "response": "SELECT AVG(l.ALB)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.PLT > 400\nAND p.Diagnosis = 'SLE'\nAND p.SEX = 'F';"}
{"question_id": 99, "response": "WITH filtered_patients AS (\n  SELECT *\n  FROM Patient \n  WHERE Diagnosis = 'RA'\n  AND EXTRACT(YEAR FROM Birthday) = 1980\n)\nSELECT \n  (COUNT(CASE WHEN SEX = 'F' THEN 1 END) * 100.0 / COUNT(*)) as result\nFROM filtered_patients;"}
{"question_id": 101, "response": "SELECT DISTINCT p.ID\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M' AND l.GPT >= 60;"}
{"question_id": 102, "response": "WITH merged AS (\n  SELECT *\n  FROM Patient p\n  INNER JOIN Laboratory l ON p.ID = l.ID\n),\nfiltered AS (\n  SELECT *\n  FROM merged\n  WHERE GPT > 60\n)\nSELECT DISTINCT Diagnosis\nFROM filtered\nORDER BY Birthday ASC;"}
{"question_id": 103, "response": "SELECT DISTINCT p.ID, p.SEX, p.Birthday\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.UN = 29;"}
{"question_id": 105, "response": "WITH merged AS (\n  SELECT p.*, l.\"T-CHO\"\n  FROM Patient p\n  INNER JOIN Laboratory l ON p.ID = l.ID\n),\nfiltered AS (\n  SELECT DISTINCT\n    EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Birthday) as age\n  FROM merged\n  WHERE \"T-CHO\" >= 250 AND SEX = 'M'\n)\nSELECT AVG(age)\nFROM filtered;"}
{"question_id": 106, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG >= 200\nAND EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday) > 50"}
{"question_id": 107, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE EXTRACT(YEAR FROM p.Birthday) BETWEEN 1936 AND 1956\nAND p.SEX = 'M'\nAND l.CPK >= 250"}
{"question_id": 108, "response": "WITH merged AS (\n  SELECT p.*, l.GLU, l.\"T-CHO\"\n  FROM Patient p\n  INNER JOIN Laboratory l ON p.ID = l.ID\n),\nfiltered AS (\n  SELECT \n    ID,\n    SEX,\n    EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM Birthday::DATE) AS Age\n  FROM merged\n  WHERE GLU >= 180 AND \"T-CHO\" < 250\n)\nSELECT DISTINCT ID, SEX, Age\nFROM filtered;"}
{"question_id": 109, "response": "SELECT DISTINCT p.Diagnosis, p.ID, \nEXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday) AS Age\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.RBC < 3.5"}
{"question_id": 111, "response": "WITH filtered_lab AS (\n  SELECT ID\n  FROM Laboratory\n  WHERE HCT >= 52\n  GROUP BY ID\n  HAVING COUNT(*) >= 2\n)\nSELECT \n  p.ID,\n  EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday) AS Age\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE p.ID IN (SELECT ID FROM filtered_lab)\nGROUP BY p.ID, p.Birthday;"}
{"question_id": 113, "response": "SELECT DISTINCT p.ID\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.PLT >= 100\nAND l.PLT <= 400\nAND EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday) < 50\nAND EXTRACT(YEAR FROM l.Date) = 1984;"}
{"question_id": 115, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE p.SEX = 'M'\nAND l.WBC > 3.5\nAND l.WBC < 9.0\nAND (l.FG <= 150 OR l.FG >= 450)"}
{"question_id": 116, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGG >= 2000;"}
{"question_id": 117, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE l.IGG > 900 \nAND l.IGG < 2000 \nAND e.Symptoms IS NOT NULL;"}
{"question_id": 118, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.IGA > 80 \nAND l.IGA < 500 \nAND EXTRACT(YEAR FROM \"First Date\") >= 1990"}
{"question_id": 119, "response": "WITH merged AS (\n    SELECT p.*, l.IGM \n    FROM Patient p\n    INNER JOIN Laboratory l ON p.ID = l.ID\n),\nfiltered AS (\n    SELECT DISTINCT ID, Diagnosis\n    FROM merged \n    WHERE IGM <= 40 OR IGM >= 400\n)\nSELECT Diagnosis\nFROM (\n    SELECT Diagnosis, COUNT(*) as cnt\n    FROM filtered\n    GROUP BY Diagnosis\n    ORDER BY cnt DESC\n    LIMIT 1\n) t;"}
{"question_id": 121, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.CRE >= 1.5 \nAND (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.Birthday)) < 70"}
{"question_id": 123, "response": "SELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nINNER JOIN Laboratory l ON e.ID = l.ID\nWHERE (l.SM IN ('negative', '0'))\nAND e.Thrombosis = 0"}
{"question_id": 124, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE (e.SC170 = 'negative' OR e.SC170 = '0')\nAND p.SEX = 'F'\nAND e.Symptoms IS NULL;"}
{"question_id": 126, "response": "SELECT p.Birthday\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nWHERE l.GOT >= 60\nORDER BY p.Birthday DESC\nLIMIT 1"}
{"question_id": 127, "response": "SELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nINNER JOIN Laboratory l ON p.ID = l.ID\nINNER JOIN Examination e ON p.ID = e.ID\nWHERE l.CPK < 250 \nAND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')"}
{"question_id": 128, "response": "WITH merged AS (\n    SELECT l.name, m.home_team_goal, m.away_team_goal\n    FROM Match m\n    INNER JOIN League l ON m.league_id = l.id\n    WHERE m.season = '2015/2016'\n),\ngrouped AS (\n    SELECT \n        name,\n        SUM(home_team_goal) as total_home_goals,\n        SUM(away_team_goal) as total_away_goals,\n        SUM(home_team_goal) + SUM(away_team_goal) as total_goals\n    FROM merged\n    GROUP BY name\n)\nSELECT name\nFROM grouped\nWHERE total_goals = (SELECT MAX(total_goals) FROM grouped);"}
{"question_id": 130, "response": "SELECT buildUpPlaySpeed\nFROM Team_Attributes\nINNER JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nORDER BY buildUpPlaySpeed DESC\nLIMIT 4;"}
{"question_id": 131, "response": "WITH draw_counts AS (\n    SELECT l.name, COUNT(*) as draw_count\n    FROM Match m\n    INNER JOIN League l ON m.league_id = l.id \n    WHERE m.season = '2015/2016' \n    AND m.home_team_goal = m.away_team_goal\n    GROUP BY l.name\n)\nSELECT name\nFROM draw_counts\nWHERE draw_count = (SELECT MAX(draw_count) FROM draw_counts)\nLIMIT 1;"}
{"question_id": 132, "response": "WITH merged AS (\n  SELECT pa.*, p.birthday\n  FROM Player_Attributes pa\n  INNER JOIN Player p ON pa.player_api_id = p.player_api_id\n),\nfiltered AS (\n  SELECT *,\n    EXTRACT(YEAR FROM AGE(CURRENT_DATE, birthday::date)) + \n    CASE \n      WHEN EXTRACT(MONTH FROM CURRENT_DATE) > EXTRACT(MONTH FROM birthday::date) OR\n           (EXTRACT(MONTH FROM CURRENT_DATE) = EXTRACT(MONTH FROM birthday::date) AND\n            EXTRACT(DAY FROM CURRENT_DATE) >= EXTRACT(DAY FROM birthday::date))\n      THEN 1\n      ELSE 0\n    END as age\n  FROM merged\n  WHERE sprint_speed >= 97\n  AND EXTRACT(YEAR FROM date::date) BETWEEN 2013 AND 2015\n)\nSELECT DISTINCT age\nFROM filtered;"}
{"question_id": 133, "response": "WITH match_counts AS (\n  SELECT league_id, COUNT(*) as cnt\n  FROM Match\n  GROUP BY league_id\n)\nSELECT l.name, mc.cnt\nFROM match_counts mc\nJOIN League l ON l.id = mc.league_id\nWHERE mc.cnt = (SELECT MAX(cnt) FROM match_counts)\nLIMIT 1;"}
{"question_id": 134, "response": "SELECT DISTINCT team_fifa_api_id \nFROM Team_Attributes \nWHERE buildUpPlaySpeed > 50 \nAND buildUpPlaySpeed < 60;"}
{"question_id": 136, "response": "WITH filtered_players AS (\n    SELECT DISTINCT p.id, pa.preferred_foot\n    FROM Player p\n    INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n    WHERE CAST(SUBSTRING(p.birthday, 1, 4) AS INTEGER) BETWEEN 1987 AND 1992\n)\nSELECT \n    (COUNT(DISTINCT CASE WHEN preferred_foot = 'left' THEN id END)::FLOAT / \n     COUNT(DISTINCT id)::FLOAT * 100) as left_foot_percentage\nFROM filtered_players;"}
{"question_id": 138, "response": "WITH merged AS (\n  SELECT p.*, pa.*\n  FROM Player p\n  INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n),\nfiltered AS (\n  SELECT *\n  FROM merged\n  WHERE height > 180\n),\ngrouped AS (\n  SELECT \n    player_api_id,\n    FIRST_VALUE(player_name) OVER (PARTITION BY player_api_id ORDER BY player_api_id) as player_name,\n    AVG(heading_accuracy) as avg_heading_accuracy\n  FROM filtered\n  GROUP BY player_api_id\n)\nSELECT player_name\nFROM grouped\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;"}
{"question_id": 139, "response": "WITH merged AS (\n  SELECT l.name, m.home_team_goal, m.away_team_goal, m.id AS match_id\n  FROM League l\n  INNER JOIN Match m ON l.id = m.league_id\n  WHERE m.season = '2009/2010'\n),\ngrouped AS (\n  SELECT \n    name,\n    SUM(home_team_goal) AS total_home_goals,\n    SUM(away_team_goal) AS total_away_goals,\n    COUNT(DISTINCT match_id) AS distinct_matches,\n    SUM(home_team_goal)::float / COUNT(DISTINCT match_id) AS home_goals_avg,\n    SUM(away_team_goal)::float / COUNT(DISTINCT match_id) AS away_goals_avg\n  FROM merged\n  GROUP BY name\n)\nSELECT name\nFROM grouped \nWHERE home_goals_avg > away_goals_avg;"}
{"question_id": 140, "response": "SELECT player_name \nFROM Player \nWHERE birthday LIKE '1970-10%';"}
{"question_id": 141, "response": "SELECT pa.overall_rating\nFROM Player p\nINNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Gabriel Tamas'\nAND SUBSTRING(pa.date::text, 1, 4) = '2011';"}
{"question_id": 143, "response": "WITH max_height_players AS (\n    SELECT p.*, pa.finishing \n    FROM Player p\n    INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n    WHERE p.height = (SELECT MAX(height) FROM Player)\n),\nmin_height_players AS (\n    SELECT p.*, pa.finishing\n    FROM Player p \n    INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n    WHERE p.height = (SELECT MIN(height) FROM Player)\n),\nheight_stats AS (\n    SELECT \n        'highest' as result\n    WHERE (SELECT AVG(finishing) FROM max_height_players) > \n          (SELECT AVG(finishing) FROM min_height_players)\n    UNION ALL\n    SELECT \n        'Min' as result\n    WHERE (SELECT AVG(finishing) FROM max_height_players) <= \n          (SELECT AVG(finishing) FROM min_height_players)\n)\nSELECT result FROM height_stats LIMIT 1;"}
{"question_id": 144, "response": "WITH filtered_data AS (\n    SELECT DISTINCT pa.player_api_id, pa.overall_rating\n    FROM Player p\n    INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n    WHERE p.height > 170\n    AND SUBSTRING(pa.date::text, 1, 4) >= '2010'\n    AND SUBSTRING(pa.date::text, 1, 4) <= '2015'\n)\nSELECT SUM(overall_rating) / COUNT(DISTINCT player_api_id) \nFROM filtered_data;"}
{"question_id": 152, "response": "WITH merged AS (\n  SELECT l.*, m.* \n  FROM League l\n  INNER JOIN Match m ON l.id = m.league_id\n),\nseason_data AS (\n  SELECT *\n  FROM merged \n  WHERE season = '2008/2009'\n),\nleague_counts AS (\n  SELECT name, COUNT(id_y) as match_count\n  FROM season_data\n  GROUP BY name\n)\nSELECT name\nFROM league_counts \nWHERE match_count = (SELECT MAX(match_count) FROM league_counts);"}
{"question_id": 153, "response": "WITH merged AS (\n  SELECT p.*, pa.overall_rating \n  FROM Player p \n  INNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\n),\nratings AS (\n  SELECT \n    SUM(CASE WHEN player_name = 'Ariel Borysiuk' THEN overall_rating ELSE 0 END) as ariel_rating,\n    SUM(CASE WHEN player_name = 'Paulin Puel' THEN overall_rating ELSE 0 END) as paulin_rating\n  FROM merged\n)\nSELECT ((ariel_rating - paulin_rating) * 100.0 / paulin_rating) as result\nFROM ratings;"}
{"question_id": 155, "response": "SELECT t.team_long_name, ta.chanceCreationPassing, ta.chanceCreationPassingClass\nFROM Team t\nINNER JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Ajax'\nORDER BY ta.chanceCreationPassing DESC\nLIMIT 1;"}
{"question_id": 156, "response": "SELECT p.player_name\nFROM Player p\nINNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.date LIKE '2016-06-23%'\nAND pa.overall_rating = 77\nORDER BY p.birthday ASC\nLIMIT 1;"}
{"question_id": 157, "response": "SELECT pa.overall_rating\nFROM Player p\nINNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.date LIKE '2016-02-04%'\nAND p.player_name = 'Aaron Mooy'\nLIMIT 1;"}
{"question_id": 160, "response": "SELECT ta.buildUpPlayPassingClass\nFROM Team t\nINNER JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'FC Lorient'\nAND ta.date LIKE '2010-02-22%'\nLIMIT 1;"}
{"question_id": 161, "response": "SELECT ta.defenceAggressionClass\nFROM Team t\nINNER JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE t.team_long_name = 'Hannover 96'\nAND ta.date LIKE '2015-09-10%'\nLIMIT 1;"}
{"question_id": 162, "response": "SELECT AVG(overall_rating)\nFROM Player p\nINNER JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE p.player_name = 'Marko Arnautovic'\nAND SUBSTRING(pa.date, 1, 10) >= '2007-02-22'\nAND SUBSTRING(pa.date, 1, 10) <= '2016-04-21';"}
{"question_id": 163, "response": "WITH merged AS (\n    SELECT *\n    FROM Player p\n    INNER JOIN Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\n),\nfiltered AS (\n    SELECT *\n    FROM merged\n    WHERE SUBSTRING(date::text, 1, 10) = '2013-07-12'\n),\nratings AS (\n    SELECT \n        SUM(CASE WHEN player_name = 'Landon Donovan' THEN overall_rating ELSE 0 END) as landon_rating,\n        SUM(CASE WHEN player_name = 'Jordan Bowery' THEN overall_rating ELSE 0 END) as jordan_rating\n    FROM filtered\n)\nSELECT ((landon_rating - jordan_rating) * 100.0) / landon_rating as result\nFROM ratings;"}
{"question_id": 164, "response": "WITH RankedPlayers AS (\n  SELECT player_name,\n         DENSE_RANK() OVER (ORDER BY height DESC) as rank\n  FROM Player\n)\nSELECT player_name\nFROM RankedPlayers\nWHERE rank = 1;"}
{"question_id": 166, "response": "SELECT DISTINCT p.player_name\nFROM Player p\nINNER JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.attacking_work_rate = 'high';"}
{"question_id": 167, "response": "SELECT DISTINCT t.team_short_name\nFROM Team t\nINNER JOIN Team_Attributes ta ON t.team_api_id = ta.team_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe';"}
{"question_id": 169, "response": "SELECT \n(SELECT SUM(jumping) FROM Player_Attributes WHERE id = 6) - \n(SELECT SUM(jumping) FROM Player_Attributes WHERE id = 23) AS result;"}
{"question_id": 170, "response": "SELECT id \nFROM Player_Attributes \nWHERE preferred_foot = 'right'\nORDER BY potential ASC\nLIMIT 4;"}
{"question_id": 171, "response": "WITH max_crossing AS (\n    SELECT MAX(crossing) as max_cross \n    FROM Player_Attributes\n)\nSELECT COUNT(DISTINCT player_api_id)\nFROM Player_Attributes, max_crossing\nWHERE preferred_foot = 'left' \nAND crossing = max_cross;"}
{"question_id": 173, "response": "SELECT DISTINCT buildUpPlaySpeedClass\nFROM Team_Attributes ta\nINNER JOIN Team t ON ta.team_api_id = t.team_api_id\nWHERE t.team_long_name = 'KSV Cercle Brugge';"}
{"question_id": 174, "response": "WITH heaviest_player AS (\n    SELECT player_api_id \n    FROM Player \n    WHERE weight = (SELECT MAX(weight) FROM Player)\n    LIMIT 1\n)\nSELECT pa.id, pa.finishing, pa.curve\nFROM Player_Attributes pa\nJOIN heaviest_player hp ON pa.player_api_id = hp.player_api_id\nLIMIT 1;"}
{"question_id": 175, "response": "WITH merged AS (\n  SELECT l.name, COUNT(*) as game_count\n  FROM League l\n  INNER JOIN Match m ON l.id = m.league_id\n  WHERE m.season = '2015/2016'\n  GROUP BY l.name\n  ORDER BY game_count DESC\n  LIMIT 4\n)\nSELECT name\nFROM merged;"}
{"question_id": 176, "response": "SELECT t.team_long_name\nFROM Match m\nINNER JOIN Team t ON m.away_team_api_id = t.team_api_id\nWHERE m.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\nLIMIT 1;"}
{"question_id": 179, "response": "SELECT d.driverref\nFROM qualifying q\nINNER JOIN drivers d ON q.driverid = d.driverid\nWHERE q.raceid = 20\nORDER BY q.q1 DESC\nLIMIT 5"}
{"question_id": 180, "response": "SELECT d.surname\nFROM qualifying q\nINNER JOIN drivers d ON q.driverid = d.driverid\nWHERE q.raceid = 19\nORDER BY q.q2 ASC NULLS LAST\nLIMIT 1"}
{"question_id": 181, "response": "SELECT DISTINCT r.name\nFROM circuits c\nINNER JOIN races r ON c.circuitid = r.circuitid\nWHERE c.country = 'Germany';"}
{"question_id": 182, "response": "SELECT DISTINCT c.lat, c.lng\nFROM circuits c\nINNER JOIN races r ON c.circuitid = r.circuitid\nWHERE r.name = 'Australian Grand Prix'"}
{"question_id": 187, "response": "SELECT d.forename, d.surname\nFROM drivers d\nINNER JOIN results r ON d.driverid = r.driverid\nWHERE r.raceid = 592 \nAND r.time IS NOT NULL \nAND d.dob IS NOT NULL\nORDER BY d.dob ASC\nLIMIT 1;"}
{"question_id": 188, "response": "SELECT DISTINCT d.forename, d.surname, d.url\nFROM results r\nINNER JOIN drivers d ON r.driverid = d.driverid\nWHERE r.raceid = 161 AND r.time LIKE '1:27%';"}
{"question_id": 190, "response": "SELECT c.url\nFROM constructorResults cr\nINNER JOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9\nORDER BY cr.points DESC\nLIMIT 1"}
{"question_id": 191, "response": "SELECT d.code \nFROM qualifying q \nINNER JOIN drivers d ON q.driverid = d.driverid \nWHERE q.raceid = 45 \nAND q.q3 LIKE '1:33%' \nLIMIT 1;"}
{"question_id": 194, "response": "SELECT d.nationality\nFROM drivers d\nINNER JOIN results r ON d.driverId = r.driverId\nWHERE CAST(r.fastestLapSpeed AS FLOAT) = (\n    SELECT MAX(CAST(fastestLapSpeed AS FLOAT))\n    FROM results\n    WHERE fastestLapSpeed IS NOT NULL\n)\nLIMIT 1;"}
{"question_id": 195, "response": "WITH filtered_data AS (\n  SELECT d.*, r.raceid, r.fastestlapspeed::numeric\n  FROM drivers d\n  INNER JOIN results r ON d.driverid = r.driverid\n  WHERE d.forename = 'Paul' AND d.surname = 'di Resta'\n),\nrace_speeds AS (\n  SELECT \n    SUM(CASE WHEN raceid = 853 THEN fastestlapspeed ELSE 0 END) as race_853_speed,\n    SUM(CASE WHEN raceid = 854 THEN fastestlapspeed ELSE 0 END) as race_854_speed\n  FROM filtered_data\n)\nSELECT ((race_853_speed - race_854_speed) * 100.0) / race_853_speed as result\nFROM race_speeds;"}
{"question_id": 196, "response": "WITH filtered_data AS (\n  SELECT r.*, res.time\n  FROM races r\n  INNER JOIN results res ON r.raceid = res.raceid\n  WHERE r.date = '1983-07-16'\n)\nSELECT (CAST(COUNT(CASE WHEN time IS NOT NULL THEN 1 END) AS FLOAT) / CAST(COUNT(*) AS FLOAT) * 100) as completion_percentage\nFROM filtered_data;"}
{"question_id": 199, "response": "SELECT milliseconds, forename, surname, races.name\nFROM drivers \nINNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId\nINNER JOIN races ON lapTimes.raceId = races.raceId\nORDER BY milliseconds ASC\nLIMIT 1;"}
{"question_id": 202, "response": "SELECT \n    d.forename,\n    d.surname,\n    d.nationality,\n    MAX(r.points) as points\nFROM \n    drivers d\n    INNER JOIN results r ON d.driverid = r.driverid\nWHERE \n    r.position = 1\nGROUP BY \n    d.forename, d.surname, d.nationality\nORDER BY \n    COUNT(r.position) DESC\nLIMIT 1;"}
{"question_id": 204, "response": "SELECT DISTINCT r.name, c.name, c.location\nFROM circuits c\nINNER JOIN races r ON c.circuitid = r.circuitid\nWHERE r.year = 2005 AND EXTRACT(MONTH FROM r.date) = 9;"}
{"question_id": 208, "response": "WITH european_gp AS (\n  SELECT c.*, r.name as race_name\n  FROM circuits c\n  INNER JOIN races r ON c.circuitid = r.circuitid\n  WHERE r.name = 'European Grand Prix'\n),\ncounts AS (\n  SELECT \n    COUNT(*) FILTER (WHERE country = 'Germany') * 100.0 / COUNT(*) as percentage\n  FROM european_gp\n)\nSELECT percentage \nFROM counts;"}
{"question_id": 221, "response": "SELECT DISTINCT c.name\nFROM constructorStandings cs\nINNER JOIN constructors c ON cs.constructorId = c.constructorId\nWHERE cs.points = 0 AND cs.raceId = 291;"}
{"question_id": 222, "response": "WITH filtered_data AS (\n  SELECT cs.constructorId, cs.raceId\n  FROM constructorStandings cs\n  INNER JOIN constructors c ON cs.constructorId = c.constructorId \n  WHERE cs.points = 0 AND c.nationality = 'Japanese'\n),\nrace_counts AS (\n  SELECT constructorId\n  FROM filtered_data\n  GROUP BY constructorId\n  HAVING COUNT(DISTINCT raceId) = 2\n)\nSELECT COUNT(DISTINCT constructorId) \nFROM race_counts;"}
{"question_id": 226, "response": "SELECT AVG(CAST(NULLIF(r.fastestlapspeed, '') AS DECIMAL))\nFROM results r\nINNER JOIN races ra ON r.raceid = ra.raceid\nWHERE ra.year = 2009 AND ra.name = 'Spanish Grand Prix';"}
{"question_id": 230, "response": "WITH youngest_drivers AS (\n  SELECT *\n  FROM drivers\n  ORDER BY dob DESC\n  LIMIT 3\n)\nSELECT COUNT(*)\nFROM youngest_drivers\nWHERE nationality = 'Dutch';"}
{"question_id": 236, "response": "WITH filtered_drivers AS (\n    SELECT driverid, forename, surname\n    FROM drivers\n    WHERE nationality = 'German' \n    AND dob BETWEEN '1980-01-01' AND '1985-12-31'\n),\nmerged_data AS (\n    SELECT p.*, d.forename, d.surname\n    FROM pitStops p\n    INNER JOIN filtered_drivers d ON p.driverid = d.driverid\n),\navg_duration AS (\n    SELECT forename, surname, AVG(CAST(duration AS numeric)) as duration\n    FROM merged_data\n    GROUP BY forename, surname\n)\nSELECT forename, surname\nFROM avg_duration\nORDER BY duration ASC\nLIMIT 3"}
{"question_id": 240, "response": "WITH merged_data AS (\n    SELECT c.name AS constructor_name, c.nationality, r.name AS race_name, r.year, rs.points\n    FROM results rs\n    INNER JOIN constructors c ON rs.constructorid = c.constructorid \n    INNER JOIN races r ON rs.raceid = r.raceid\n    WHERE r.name = 'Monaco Grand Prix'\n    AND r.year BETWEEN 1980 AND 2010\n),\ngrouped_data AS (\n    SELECT constructor_name, nationality, SUM(points) as total_points\n    FROM merged_data\n    GROUP BY constructor_name, nationality\n    ORDER BY total_points DESC\n    LIMIT 1\n)\nSELECT total_points as points, constructor_name as name_x, nationality\nFROM grouped_data;"}
{"question_id": 241, "response": "WITH circuit_id AS (\n    SELECT circuitid \n    FROM circuits \n    WHERE name = 'Marina Bay Street Circuit'\n    LIMIT 1\n),\nraces_2008 AS (\n    SELECT raceid \n    FROM races \n    WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuit_id)\n),\nqualifying_times AS (\n    SELECT driverid,\n           (CAST(SPLIT_PART(q3, ':', 1) AS INTEGER) * 60 + CAST(SPLIT_PART(q3, ':', 2) AS FLOAT)) as q3_seconds\n    FROM qualifying\n    WHERE raceid IN (SELECT raceid FROM races_2008)\n    AND q3 IS NOT NULL\n),\nfastest_qualifying AS (\n    SELECT driverid\n    FROM qualifying_times\n    ORDER BY q3_seconds ASC\n    LIMIT 1\n)\nSELECT forename, surname\nFROM drivers\nWHERE driverid = (SELECT driverid FROM fastest_qualifying);"}
{"question_id": 243, "response": "SELECT MAX(accident_count) \nFROM (\n    SELECT r.driverId, COUNT(*) as accident_count\n    FROM results r\n    INNER JOIN races ra ON r.raceId = ra.raceId\n    INNER JOIN status s ON r.statusId = s.statusId\n    WHERE r.statusId = 3 \n    AND ra.name = 'Canadian Grand Prix'\n    GROUP BY r.driverId\n) subquery;"}
{"question_id": 245, "response": "WITH lap_times AS (\n  SELECT \n    r.*,\n    CASE \n      WHEN fastestlaptime IS NOT NULL THEN \n        CAST(SPLIT_PART(fastestlaptime, ':', 1) AS INTEGER) * 60 + \n        CAST(SPLIT_PART(fastestlaptime, ':', 2) AS FLOAT)\n    END AS time_in_seconds\n  FROM results r\n  WHERE fastestlaptime IS NOT NULL\n)\nSELECT fastestlaptime\nFROM lap_times l\nJOIN races r ON l.raceid = r.raceid\nJOIN circuits c ON r.circuitid = c.circuitid\nWHERE c.country = 'Italy'\nAND time_in_seconds = (\n  SELECT MIN(time_in_seconds)\n  FROM lap_times l2\n  JOIN races r2 ON l2.raceid = r2.raceid \n  JOIN circuits c2 ON r2.circuitid = c2.circuitid\n  WHERE c2.country = 'Italy'\n)\nLIMIT 1;"}
{"question_id": 247, "response": "SELECT COUNT(DISTINCT s.id)\nFROM superhero s\nINNER JOIN hero_power hp ON s.id = hp.hero_id\nINNER JOIN superpower sp ON hp.power_id = sp.id\nINNER JOIN colour c ON s.eye_colour_id = c.id\nWHERE sp.power_name = 'Agility' \nAND c.colour = 'Blue'"}
{"question_id": 248, "response": "SELECT s.superhero_name\nFROM superhero s\nINNER JOIN colour c1 ON s.eye_colour_id = c1.id\nINNER JOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Blue' AND c2.colour = 'Blond'"}
{"question_id": 251, "response": "WITH marvel_heroes AS (\n    SELECT id \n    FROM publisher \n    WHERE publisher_name = 'Marvel Comics'\n),\nsuper_strength_power AS (\n    SELECT id \n    FROM superpower \n    WHERE power_name = 'Super Strength'\n),\nheroes_with_super_strength AS (\n    SELECT hero_id \n    FROM hero_power \n    WHERE power_id IN (SELECT id FROM super_strength_power)\n),\nmarvel_heroes_ids AS (\n    SELECT id \n    FROM superhero \n    WHERE publisher_id IN (SELECT id FROM marvel_heroes)\n)\nSELECT superhero_name\nFROM superhero\nWHERE id IN (SELECT hero_id FROM heroes_with_super_strength)\nAND id IN (SELECT id FROM marvel_heroes_ids);"}
{"question_id": 252, "response": "WITH merged AS (\n    SELECT p.publisher_name, ha.attribute_value\n    FROM superhero s\n    INNER JOIN publisher p ON s.publisher_id = p.id\n    INNER JOIN hero_attribute ha ON s.id = ha.hero_id\n    INNER JOIN attribute a ON ha.attribute_id = a.id\n    WHERE a.attribute_name = 'Speed'\n)\nSELECT publisher_name\nFROM merged\nWHERE attribute_value = (SELECT MIN(attribute_value) FROM merged);"}
{"question_id": 254, "response": "WITH filtered_heroes AS (\n    SELECT s.superhero_name, ha.attribute_value\n    FROM superhero s\n    INNER JOIN hero_attribute ha ON s.id = ha.hero_id\n    INNER JOIN attribute a ON ha.attribute_id = a.id\n    WHERE a.attribute_name = 'Intelligence'\n)\nSELECT superhero_name\nFROM filtered_heroes\nWHERE attribute_value = (\n    SELECT MIN(attribute_value)\n    FROM filtered_heroes\n)\nLIMIT 1;"}
{"question_id": 255, "response": "SELECT r.race\nFROM superhero s\nINNER JOIN race r ON s.race_id = r.id\nWHERE s.superhero_name = 'Copycat'\nLIMIT 1;"}
{"question_id": 257, "response": "SELECT DISTINCT superhero.superhero_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE superpower.power_name = 'Death Touch';"}
{"question_id": 259, "response": "WITH bad_superheroes AS (\n  SELECT s.*, p.publisher_name, a.alignment\n  FROM superhero s\n  INNER JOIN publisher p ON s.publisher_id = p.id \n  INNER JOIN alignment a ON s.alignment_id = a.id\n  WHERE a.alignment = 'Bad'\n)\nSELECT \n  (COUNT(DISTINCT bs.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) as percentage_bad_superheroes,\n  COUNT(DISTINCT CASE WHEN bs.publisher_name = 'Marvel Comics' THEN bs.id END) as marvel_bad_superheroes\nFROM bad_superheroes bs;"}
{"question_id": 261, "response": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'"}
{"question_id": 265, "response": "SELECT DISTINCT superhero_name\nFROM superhero\nINNER JOIN colour ON superhero.eye_colour_id = colour.id\nWHERE height_cm BETWEEN 170 AND 190\nAND colour.colour = 'No Colour';"}
{"question_id": 266, "response": "SELECT DISTINCT c.colour\nFROM superhero s\nINNER JOIN race r ON s.race_id = r.id\nINNER JOIN colour c ON s.hair_colour_id = c.id\nWHERE s.height_cm = 185 AND r.race = 'Human'"}
{"question_id": 269, "response": "SELECT DISTINCT sp.power_name\nFROM hero_power hp\nINNER JOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 1;"}
{"question_id": 270, "response": "SELECT COUNT(DISTINCT hp.hero_id)\nFROM hero_power hp\nINNER JOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Stealth'"}
{"question_id": 272, "response": "SELECT s.superhero_name\nFROM superhero s\nINNER JOIN hero_attribute ha ON s.id = ha.hero_id\nINNER JOIN attribute a ON ha.attribute_id = a.id\nINNER JOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Dark Horse Comics'\nAND a.attribute_name = 'Durability'\nORDER BY ha.attribute_value DESC\nLIMIT 1;"}
{"question_id": 274, "response": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nINNER JOIN publisher p ON s.publisher_id = p.id\nWHERE s.eye_colour_id = s.hair_colour_id \nAND s.eye_colour_id = s.skin_colour_id;"}
{"question_id": 275, "response": "WITH female_superheroes AS (\n  SELECT s.*\n  FROM superhero s\n  INNER JOIN gender g ON s.gender_id = g.id\n  INNER JOIN colour c ON s.skin_colour_id = c.id\n  WHERE g.gender = 'Female'\n)\nSELECT \n  (COUNT(CASE WHEN c.colour = 'Blue' THEN 1 END)::FLOAT / COUNT(*)::FLOAT * 100) as percentage\nFROM female_superheroes fs\nINNER JOIN colour c ON fs.skin_colour_id = c.id;"}
{"question_id": 276, "response": "SELECT COUNT(hp.power_id)\nFROM hero_power hp\nINNER JOIN superhero s ON hp.hero_id = s.id\nWHERE s.superhero_name = 'Amazo'"}
{"question_id": 278, "response": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nINNER JOIN colour c1 ON s.eye_colour_id = c1.id\nINNER JOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'Black' OR c2.colour = 'Black';"}
{"question_id": 279, "response": "SELECT s.superhero_name\nFROM superhero s\nINNER JOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Neutral';"}
{"question_id": 280, "response": "WITH strength_heroes AS (\n    SELECT ha.hero_id, ha.attribute_value\n    FROM hero_attribute ha\n    INNER JOIN attribute a ON ha.attribute_id = a.id\n    WHERE a.attribute_name = 'Strength'\n)\nSELECT COUNT(DISTINCT hero_id) \nFROM strength_heroes\nWHERE attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM strength_heroes\n);"}
{"question_id": 281, "response": "WITH female_heroes AS (\n    SELECT s.*, g.gender, p.publisher_name\n    FROM superhero s\n    LEFT JOIN publisher p ON s.publisher_id = p.id\n    INNER JOIN gender g ON s.gender_id = g.id\n    WHERE g.gender = 'Female'\n)\nSELECT \n    (COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*)) AS result\nFROM female_heroes;"}
{"question_id": 283, "response": "SELECT SUM(height_cm)::float / COUNT(id) FROM superhero;"}
{"question_id": 284, "response": "SELECT sp.power_name\nFROM superhero sh\nINNER JOIN hero_power hp ON sh.id = hp.hero_id\nINNER JOIN superpower sp ON hp.power_id = sp.id\nWHERE sh.superhero_name = 'Abomination';"}
{"question_id": 285, "response": "SELECT s.superhero_name\nFROM superhero s\nINNER JOIN hero_attribute ha ON s.id = ha.hero_id\nINNER JOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Speed'\nAND ha.attribute_value = (\n    SELECT MAX(attribute_value)\n    FROM hero_attribute ha2\n    INNER JOIN attribute a2 ON ha2.attribute_id = a2.id\n    WHERE a2.attribute_name = 'Speed'\n)\nLIMIT 1;"}
{"question_id": 286, "response": "SELECT a.attribute_name, ha.attribute_value\nFROM superhero s\nINNER JOIN hero_attribute ha ON s.id = ha.hero_id\nINNER JOIN attribute a ON ha.attribute_id = a.id\nWHERE s.superhero_name = '3-D Man';"}
{"question_id": 289, "response": "WITH total_count AS (\n    SELECT COUNT(*) as total\n    FROM superhero s\n    INNER JOIN colour c ON s.eye_colour_id = c.id\n),\nblue_count AS (\n    SELECT COUNT(*) as blue_count\n    FROM superhero s \n    INNER JOIN colour c ON s.eye_colour_id = c.id\n    WHERE c.colour = 'Blue'\n)\nSELECT (blue_count::float / total::float * 100.0) as result\nFROM blue_count, total_count;"}
{"question_id": 290, "response": "WITH gender_counts AS (\n  SELECT \n    COUNT(CASE WHEN g.gender = 'Male' THEN 1 END)::float / \n    COUNT(CASE WHEN g.gender = 'Female' THEN 1 END) as ratio\n  FROM superhero s\n  INNER JOIN gender g ON s.gender_id = g.id\n)\nSELECT ratio FROM gender_counts;"}
{"question_id": 291, "response": "SELECT c.colour\nFROM superhero s\nINNER JOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan'\nLIMIT 1;"}
{"question_id": 292, "response": "WITH filtered_heroes AS (\n  SELECT s.*, c.id as color_id\n  FROM superhero s\n  INNER JOIN colour c ON s.eye_colour_id = c.id\n  WHERE s.weight_kg = 0 OR s.weight_kg IS NULL\n)\nSELECT \n  (SELECT COUNT(*) FROM filtered_heroes WHERE color_id = 7) - \n  (SELECT COUNT(*) FROM filtered_heroes WHERE color_id = 1) as result;"}
{"question_id": 293, "response": "SELECT COUNT(s.id)\nFROM superhero s\nINNER JOIN alignment a ON s.alignment_id = a.id\nINNER JOIN colour c ON s.skin_colour_id = c.id\nWHERE a.alignment = 'Bad' AND c.colour = 'Green'"}
{"question_id": 294, "response": "SELECT DISTINCT superhero_name\nFROM superhero\nINNER JOIN hero_power ON superhero.id = hero_power.hero_id\nINNER JOIN superpower ON hero_power.power_id = superpower.id\nWHERE power_name = 'Wind Control'\nORDER BY superhero_name;"}
{"question_id": 295, "response": "SELECT g.gender\nFROM superhero s\nINNER JOIN hero_power hp ON s.id = hp.hero_id\nINNER JOIN superpower sp ON hp.power_id = sp.id\nINNER JOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';"}
{"question_id": 296, "response": "SELECT \n(SELECT COUNT(*) FROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE p.publisher_name = 'DC Comics')\n-\n(SELECT COUNT(*) FROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics') AS result;"}
{"question_id": 298, "response": "SELECT displayname\nFROM users\nWHERE EXTRACT(YEAR FROM creationdate) = 2011;"}
{"question_id": 301, "response": "SELECT COUNT(p.id)\nFROM posts p\nINNER JOIN users u ON p.owneruserid = u.id\nWHERE u.displayname = 'csgillespie'"}
{"question_id": 306, "response": "WITH filtered_data AS (\n  SELECT p.*, u.*\n  FROM posts p\n  INNER JOIN users u ON p.owneruserid = u.id\n  WHERE p.score > 5\n)\nSELECT \n  (COUNT(CASE WHEN age > 65 THEN 1 END) * 100.0 / COUNT(*)) as result\nFROM filtered_data;"}
{"question_id": 307, "response": "SELECT p.favoritecount \nFROM posts p \nINNER JOIN comments c ON p.id = c.postid \nWHERE c.creationdate = '2014-04-23 20:29:39.0' \nAND c.userid = 3025 \nLIMIT 1;"}
{"question_id": 308, "response": "WITH filtered_data AS (\n    SELECT CASE \n        WHEN COUNT(CASE WHEN p.closeddate IS NOT NULL THEN 1 END) > 0 THEN 'well-finished'\n        ELSE 'NOT well-finished'\n    END as result\n    FROM comments c\n    INNER JOIN posts p ON c.postid = p.id \n    WHERE c.userid = 23853 \n    AND c.creationdate = '2013-07-12 09:08:18.0'\n)\nSELECT result FROM filtered_data;"}
{"question_id": 309, "response": "SELECT COUNT(u.id)\nFROM users u\nINNER JOIN posts p ON u.id = p.owneruserid\nWHERE u.displayname = 'Tiago Pasqualini';"}
{"question_id": 310, "response": "SELECT u.displayname \nFROM users u \nINNER JOIN votes v ON u.id = v.userid \nWHERE v.id = 6347 \nLIMIT 1;"}
{"question_id": 311, "response": "WITH merged AS (\n  SELECT v.*, p.id AS post_id\n  FROM votes v\n  INNER JOIN posts p ON v.userid = p.owneruserid\n)\nSELECT CAST(COUNT(DISTINCT post_id) AS FLOAT) / CAST(COUNT(DISTINCT id) AS FLOAT)\nFROM merged \nWHERE userid = 24"}
{"question_id": 312, "response": "SELECT viewcount\nFROM posts\nWHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\nLIMIT 1;"}
{"question_id": 313, "response": "SELECT text FROM comments WHERE score = 17;"}
{"question_id": 314, "response": "SELECT u.displayname\nFROM users u\nINNER JOIN comments c ON u.id = c.userid\nWHERE c.text = 'thank you user93!'\nLIMIT 1;"}
{"question_id": 315, "response": "SELECT u.displayname, u.reputation\nFROM users u\nINNER JOIN posts p ON u.id = p.owneruserid\nWHERE p.title = 'Understanding what Dassault iSight is doing?'"}
{"question_id": 316, "response": "SELECT u.displayname\nFROM posts p\nINNER JOIN users u ON p.owneruserid = u.id\nWHERE p.title = 'Open source tools for visualizing multi-dimensional data?'\nLIMIT 1;"}
{"question_id": 317, "response": "SELECT c.text\nFROM posts p\nINNER JOIN comments c ON p.id = c.postid\nWHERE p.title = 'Why square the difference instead of taking the absolute value in standard deviation?'"}
{"question_id": 318, "response": "SELECT DISTINCT u.displayname\nFROM posts p\nINNER JOIN votes v ON p.id = v.postid\nINNER JOIN users u ON v.userid = u.id\nWHERE v.bountyamount = 50 \nAND LOWER(p.title) LIKE '%variance%';"}
{"question_id": 321, "response": "WITH filtered_data AS (\n    SELECT u.id AS userid, ph.posthistorytypeid, p.viewcount\n    FROM users u\n    INNER JOIN posthistory ph ON u.id = ph.userid\n    INNER JOIN posts p ON ph.postid = p.id\n    WHERE p.viewcount >= 100\n)\nSELECT userid\nFROM filtered_data\nGROUP BY userid\nHAVING COUNT(DISTINCT posthistorytypeid) = 1;"}
{"question_id": 322, "response": "WITH filtered_badges AS (\n  SELECT *\n  FROM badges\n  WHERE name = 'Student'\n),\ncounts AS (\n  SELECT \n    COUNT(*) FILTER (WHERE EXTRACT(YEAR FROM date) = 2010) AS count_2010,\n    COUNT(*) FILTER (WHERE EXTRACT(YEAR FROM date) = 2011) AS count_2011,\n    COUNT(*) AS total_count\n  FROM filtered_badges\n)\nSELECT \n  (CAST(count_2010 AS DECIMAL) / total_count * 100) - \n  (CAST(count_2011 AS DECIMAL) / total_count * 100) AS result\nFROM counts;"}
{"question_id": 323, "response": "WITH post_counts AS (\n    SELECT OwnerUserId, COUNT(*) as post_count\n    FROM posts \n    GROUP BY OwnerUserId\n    HAVING COUNT(*) > 10\n)\nSELECT AVG(u.UpVotes) as average_upvotes, AVG(u.Age) as average_age\nFROM users u\nINNER JOIN post_counts p ON u.Id = p.OwnerUserId;"}
{"question_id": 324, "response": "WITH votes_by_year AS (\n  SELECT \n    EXTRACT(YEAR FROM creationdate) as year,\n    COUNT(id) as vote_count\n  FROM votes\n  WHERE EXTRACT(YEAR FROM creationdate) IN (2010, 2011)\n  GROUP BY EXTRACT(YEAR FROM creationdate)\n)\nSELECT \n  CAST((SELECT vote_count FROM votes_by_year WHERE year = 2010) AS FLOAT) / \n  (SELECT vote_count FROM votes_by_year WHERE year = 2011) as result;"}
{"question_id": 326, "response": "WITH filtered_data AS (\n    SELECT u.displayname, SUM(p.viewcount) as total_views\n    FROM users u\n    INNER JOIN postHistory ph ON u.id = ph.userid\n    INNER JOIN posts p ON ph.postid = p.id\n    WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder')\n    GROUP BY u.displayname\n)\nSELECT displayname\nFROM filtered_data\nWHERE total_views = (SELECT MAX(total_views) FROM filtered_data);"}
{"question_id": 327, "response": "SELECT p.tags\nFROM users u\nINNER JOIN postHistory ph ON u.id = ph.userid\nINNER JOIN posts p ON ph.postid = p.id\nWHERE u.displayname = 'Mark Meckes' \nAND p.commentcount = 0"}
{"question_id": 328, "response": "WITH community_posts AS (\n  SELECT u.*, ph.*, t.*\n  FROM users u\n  INNER JOIN postHistory ph ON u.id = ph.userid\n  INNER JOIN tags t ON ph.postid = t.excerptpostid\n  WHERE u.displayname = 'Community'\n)\nSELECT \n  (CAST(COUNT(CASE WHEN tagname = 'r' THEN 1 END) AS FLOAT) / \n   CAST(COUNT(*) AS FLOAT) * 100) as result\nFROM community_posts;"}
{"question_id": 329, "response": "WITH merged_data AS (\n  SELECT u.displayname, p.viewcount\n  FROM users u\n  INNER JOIN posthistory ph ON u.id = ph.userid\n  INNER JOIN posts p ON ph.postid = p.id\n)\nSELECT \n  (SELECT SUM(viewcount) FROM merged_data WHERE displayname = 'Mornington') -\n  (SELECT SUM(viewcount) FROM merged_data WHERE displayname = 'Amos') AS result;"}
{"question_id": 333, "response": "SELECT COUNT(DISTINCT u.id)\nFROM users u\nINNER JOIN posts p ON u.id = p.owneruserid\nWHERE u.location = 'United Kingdom' \nAND p.favoritecount >= 4"}
{"question_id": 334, "response": "SELECT p.id, p.title \nFROM posts p \nINNER JOIN users u ON u.id = p.owneruserid \nWHERE u.displayname = 'Harvey Motulsky'\nORDER BY p.viewcount DESC\nLIMIT 1;"}
{"question_id": 336, "response": "SELECT \n  (COUNT(CASE WHEN EXTRACT(YEAR FROM p.creaiondate) = 2011 AND u.reputation > 1000 THEN 1 END)::float / \n   COUNT(*)::float * 100) as percentage\nFROM users u\nINNER JOIN posts p ON u.id = p.owneruserid;"}
{"question_id": 337, "response": "SELECT p.viewcount, u.displayname\nFROM posthistory ph\nINNER JOIN posts p ON ph.postid = p.id\nINNER JOIN users u ON p.lasteditoruserid = u.id\nWHERE ph.text = 'Computer Game Datasets';"}
{"question_id": 338, "response": "WITH max_score_post AS (\n    SELECT id\n    FROM posts\n    WHERE score = (SELECT MAX(score) FROM posts)\n),\ncomment_counts AS (\n    SELECT p.id, COUNT(*) as comment_count\n    FROM posts p\n    INNER JOIN comments c ON p.id = c.postid\n    GROUP BY p.id\n)\nSELECT cc.comment_count\nFROM comment_counts cc\nINNER JOIN max_score_post msp ON cc.id = msp.id;"}
{"question_id": 340, "response": "WITH max_rep AS (\n  SELECT MAX(reputation) as max_reputation\n  FROM users\n),\ninfluential_posts AS (\n  SELECT p.*\n  FROM posts p\n  JOIN users u ON p.owneruserid = u.id\n  WHERE u.reputation = (SELECT max_reputation FROM max_rep)\n),\npost_counts AS (\n  SELECT \n    COUNT(*) FILTER (WHERE score > 50) AS high_score_posts,\n    COUNT(*) AS total_posts\n  FROM influential_posts\n)\nSELECT \n  (high_score_posts::float / total_posts * 100) as result\nFROM post_counts;"}
{"question_id": 341, "response": "SELECT excerptpostid, wikipostid\nFROM tags\nWHERE tagname = 'sample';"}
{"question_id": 344, "response": "SELECT COUNT(*)\nFROM comments c\nINNER JOIN posts p ON c.postid = p.id\nWHERE p.commentcount = 1 AND c.score = 0;"}
{"question_id": 346, "response": "SELECT id FROM cards WHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL;"}
{"question_id": 347, "response": "SELECT id \nFROM cards \nWHERE bordercolor = 'borderless' \nAND (cardkingdomfoilid IS NULL OR cardkingdomid IS NULL);"}
{"question_id": 348, "response": "SELECT DISTINCT c.id\nFROM cards c\nINNER JOIN legalities l ON c.uuid = l.uuid\nWHERE l.format = 'gladiator'\nAND l.status = 'Banned'\nAND c.rarity = 'mythic';"}
{"question_id": 349, "response": "SELECT DISTINCT l.status\nFROM cards c\nINNER JOIN legalities l ON c.uuid = l.uuid\nWHERE c.type = 'Artifact'\nAND l.format = 'vintage'\nAND c.side IS NULL;"}
{"question_id": 355, "response": "SELECT DISTINCT bordercolor FROM cards WHERE name = 'Ancestor''s Chosen';"}
{"question_id": 357, "response": "WITH total_count AS (\n  SELECT COUNT(*) as total FROM cards\n),\nborderless_count AS (\n  SELECT COUNT(*) as borderless FROM cards WHERE bordercolor = 'borderless'\n)\nSELECT (borderless::float / total::float) * 100 as result\nFROM borderless_count, total_count;"}
{"question_id": 359, "response": "SELECT COUNT(id) \nFROM cards \nWHERE originalType = 'Summon - Angel' \nAND subtypes != 'Angel';"}
{"question_id": 360, "response": "SELECT id FROM cards WHERE dueldeck = 'a';"}
{"question_id": 361, "response": "SELECT COUNT(DISTINCT c.id)\nFROM cards c\nINNER JOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'Banned' AND c.bordercolor = 'white'"}
{"question_id": 362, "response": "SELECT DISTINCT c.name\nFROM cards c\nINNER JOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.originaltype = 'Artifact' AND c.colors = 'B';"}
{"question_id": 363, "response": "SELECT manacost \nFROM cards \nWHERE availability = 'mtgo,paper' \nAND bordercolor = 'black' \nAND frameversion = '2003' \nAND layout = 'normal';"}
{"question_id": 364, "response": "WITH total_count AS (\n  SELECT COUNT(*) as total_cards\n  FROM cards\n),\nspotlight_count AS (\n  SELECT COUNT(*) as story_spotlight_text_cards\n  FROM cards \n  WHERE istextless = 0 AND isstoryspotlight = 1\n)\nSELECT (story_spotlight_text_cards::float / total_cards) * 100 as result\nFROM total_count, spotlight_count;"}
{"question_id": 365, "response": "SELECT COUNT(s.id)\nFROM sets s\nINNER JOIN set_translations st ON s.code = st.setcode\nWHERE st.language = 'Portuguese (Brazil)'\nAND s.block = 'Commander';"}
{"question_id": 366, "response": "SELECT DISTINCT subtypes, supertypes\nFROM cards c\nINNER JOIN foreign_data f ON c.uuid = f.uuid\nWHERE f.language = 'German'\nAND c.subtypes IS NOT NULL\nAND c.supertypes IS NOT NULL;"}
{"question_id": 368, "response": "WITH merged AS (\n  SELECT c.id as id_x, c.side, l.format, r.text as text_y\n  FROM cards c\n  INNER JOIN legalities l ON c.uuid = l.uuid\n  INNER JOIN rulings r ON c.uuid = r.uuid\n  WHERE l.format = 'premodern'\n  AND r.text = 'This is a triggered mana ability.'\n  AND c.side IS NULL\n)\nSELECT COUNT(DISTINCT id_x) \nFROM merged;"}
{"question_id": 369, "response": "SELECT fd.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.types = 'Creature'\nAND c.layout = 'normal'\nAND c.bordercolor = 'black'\nAND c.artist = 'Matthew D. Wilson'\nAND fd.language = 'French';"}
{"question_id": 372, "response": "WITH filtered_data AS (\n  SELECT c.*, f.language\n  FROM cards c\n  INNER JOIN foreign_data f ON c.uuid = f.uuid\n  WHERE c.power IS NULL OR c.power = '*'\n)\nSELECT \n  (COUNT(CASE WHEN language = 'French' THEN 1 END) * 100.0 / COUNT(*)) as result\nFROM filtered_data;"}
{"question_id": 376, "response": "SELECT DISTINCT language\nFROM foreign_data\nWHERE name = 'A Pedra Fellwar';"}
{"question_id": 377, "response": "SELECT name\nFROM cards\nWHERE name IN ('Serra Angel', 'Shrine Keeper')\nORDER BY convertedmanacost DESC\nLIMIT 1;"}
{"question_id": 378, "response": "WITH set_codes AS (\n    SELECT DISTINCT setcode\n    FROM cards\n    WHERE name = 'Ancestor''s Chosen'\n)\nSELECT translation\nFROM set_translations\nWHERE setcode IN (SELECT setcode FROM set_codes)\nAND language = 'Italian';"}
{"question_id": 381, "response": "SELECT st.translation\nFROM set_translations st\nINNER JOIN sets s ON st.setcode = s.code\nWHERE s.name = 'Eighth Edition' \nAND st.language = 'Chinese Simplified'\nLIMIT 1;"}
{"question_id": 385, "response": "SELECT COUNT(*)\nFROM set_translations st\nINNER JOIN sets s ON st.setcode = s.code\nWHERE st.translation IS NOT NULL\nAND s.basesetsize < 100\nAND st.language = 'Italian'"}
{"question_id": 387, "response": "WITH merged AS (\n  SELECT c.*, s.name as set_name\n  FROM cards c\n  INNER JOIN sets s ON c.setcode = s.code\n)\nSELECT COUNT(*)\nFROM merged\nWHERE set_name = 'Coldsnap' \nAND convertedmanacost > 5\nAND (power = '*' OR power IS NULL);"}
{"question_id": 389, "response": "WITH merged_df_1 AS (\n    SELECT *\n    FROM foreign_data f\n    INNER JOIN cards c ON f.uuid = c.uuid\n),\nmerged_df_2 AS (\n    SELECT *\n    FROM merged_df_1 m1\n    INNER JOIN sets s ON m1.setcode = s.code\n)\nSELECT DISTINCT text_x \nFROM merged_df_2\nWHERE name = 'Coldsnap' \nAND language = 'Italian';"}
{"question_id": 391, "response": "WITH filtered_data AS (\n  SELECT COUNT(CASE WHEN c.convertedmanacost = 7 THEN 1 END) * 100.0 / COUNT(c.id) as percentage\n  FROM cards c\n  INNER JOIN sets s ON c.setcode = s.code\n  WHERE s.name = 'Coldsnap'\n)\nSELECT percentage FROM filtered_data;"}
{"question_id": 392, "response": "WITH merged AS (\n  SELECT c.*, s.name as set_name\n  FROM cards c\n  INNER JOIN sets s ON c.setcode = s.code\n),\nfiltered AS (\n  SELECT *\n  FROM merged \n  WHERE set_name = 'Coldsnap'\n),\ncounts AS (\n  SELECT \n    COUNT(*) as total_count,\n    COUNT(CASE WHEN cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL THEN 1 END) as powerful_count\n  FROM filtered\n)\nSELECT (powerful_count::float / total_count * 100) as result\nFROM counts;"}
{"question_id": 394, "response": "SELECT DISTINCT c.name, l.format\nFROM cards c\nINNER JOIN legalities l ON c.uuid = l.uuid\nWHERE c.edhrecrank = 1 AND l.status = 'Banned';"}
{"question_id": 395, "response": "WITH hour_of_devastation_codes AS (\n  SELECT code \n  FROM sets \n  WHERE name = 'Hour of Devastation'\n),\ncards_in_set AS (\n  SELECT * \n  FROM cards \n  WHERE setcode IN (SELECT code FROM hour_of_devastation_codes)\n)\nSELECT DISTINCT c.name, l.format\nFROM legalities l\nINNER JOIN cards_in_set c ON l.uuid = c.uuid \nWHERE l.status = 'Legal';"}
{"question_id": 397, "response": "WITH filtered_data AS (\n  SELECT DISTINCT c.frameversion, c.name,\n    CASE \n      WHEN l.status = 'Banned' THEN c.name \n      ELSE 'NO' \n    END AS banned_status\n  FROM cards c\n  INNER JOIN legalities l ON c.uuid = l.uuid\n  WHERE c.artist = 'Allen Williams'\n)\nSELECT * FROM filtered_data;"}
{"question_id": 399, "response": "WITH filtered_data AS (\n    SELECT a.molecule_id\n    FROM atom a\n    INNER JOIN bond b ON a.molecule_id = b.molecule_id\n    WHERE b.bond_type = '-' AND a.element = 'o'\n),\noxygen_counts AS (\n    SELECT molecule_id, COUNT(*) as oxygen_count\n    FROM filtered_data\n    GROUP BY molecule_id\n)\nSELECT AVG(oxygen_count) as result\nFROM oxygen_counts;"}
{"question_id": 401, "response": "SELECT DISTINCT m.molecule_id\nFROM bond b\nINNER JOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '#' AND m.label = '+'"}
{"question_id": 402, "response": "WITH filtered_bonds AS (\n  SELECT DISTINCT a.atom_id\n  FROM atom a\n  JOIN bond b ON a.molecule_id = b.molecule_id\n  WHERE b.bond_type = '='\n),\ncarbon_atoms AS (\n  SELECT COUNT(DISTINCT atom_id) as carbon_count\n  FROM filtered_bonds f\n  JOIN atom a ON f.atom_id = a.atom_id\n  WHERE a.element = 'c'\n),\ntotal_atoms AS (\n  SELECT COUNT(DISTINCT atom_id) as total_count\n  FROM filtered_bonds\n)\nSELECT (carbon_count::float / total_count) * 100 as result\nFROM carbon_atoms, total_atoms"}
{"question_id": 403, "response": "SELECT DISTINCT a.element\nFROM atom a\nINNER JOIN connected c ON a.atom_id = c.atom_id\nWHERE c.bond_id = 'TR004_8_9'"}
{"question_id": 406, "response": "WITH filtered_molecules AS (\n    SELECT a.element, a.molecule_id\n    FROM atom a\n    INNER JOIN molecule m ON a.molecule_id = m.molecule_id\n    WHERE m.label = '-'\n)\nSELECT element\nFROM (\n    SELECT element, COUNT(DISTINCT molecule_id) as molecule_count\n    FROM filtered_molecules\n    GROUP BY element\n) counts\nORDER BY molecule_count ASC\nLIMIT 1;"}
{"question_id": 407, "response": "SELECT b.bond_type\nFROM bond b\nINNER JOIN connected c ON b.bond_id = c.bond_id\nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20')\nOR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');"}
{"question_id": 409, "response": "WITH carcinogenic_molecules AS (\n    SELECT DISTINCT m.molecule_id\n    FROM molecule m\n    INNER JOIN atom a ON m.molecule_id = a.molecule_id\n    WHERE m.label = '+'\n),\nfluorine_molecules AS (\n    SELECT COUNT(DISTINCT m.molecule_id) as fluorine_count\n    FROM carcinogenic_molecules m\n    INNER JOIN atom a ON m.molecule_id = a.molecule_id\n    WHERE a.element = 'f'\n),\ntotal_molecules AS (\n    SELECT COUNT(DISTINCT molecule_id) as total_count\n    FROM carcinogenic_molecules\n)\nSELECT 100 - (CAST(fluorine_count AS FLOAT) * 100 / total_count) as result\nFROM fluorine_molecules, total_molecules;"}
{"question_id": 410, "response": "WITH filtered_data AS (\n    SELECT DISTINCT m.molecule_id, m.label\n    FROM molecule m\n    INNER JOIN atom a ON m.molecule_id = a.molecule_id\n    INNER JOIN bond b ON m.molecule_id = b.molecule_id\n    WHERE b.bond_type = '#'\n)\nSELECT \n    (CAST(COUNT(DISTINCT CASE WHEN label = '+' THEN molecule_id END) AS FLOAT) * 100 / \n    CAST(COUNT(DISTINCT molecule_id) AS FLOAT)) AS result\nFROM filtered_data;"}
{"question_id": 413, "response": "WITH total_molecules AS (\n  SELECT COUNT(molecule_id) as total_count\n  FROM molecule\n),\ncarcinogenic_molecules AS (\n  SELECT COUNT(molecule_id) as carcinogenic_count \n  FROM molecule\n  WHERE label = '+'\n)\nSELECT ROUND((carcinogenic_count::decimal / total_count) * 100, 3) as result\nFROM total_molecules, carcinogenic_molecules;"}
{"question_id": 414, "response": "WITH filtered_data AS (\n  SELECT \n    COUNT(CASE WHEN element = 'h' THEN atom_id END) * 100.0 / COUNT(atom_id) AS percentage\n  FROM atom\n  WHERE molecule_id = 'TR206'\n)\nSELECT ROUND(percentage, 4) AS result\nFROM filtered_data;"}
{"question_id": 415, "response": "SELECT DISTINCT a.element, m.label\nFROM atom a\nINNER JOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.molecule_id = 'TR060';"}
{"question_id": 416, "response": "WITH bond_counts AS (\n  SELECT bond_type, COUNT(*) as count\n  FROM bond\n  WHERE molecule_id = 'TR010'\n  GROUP BY bond_type\n)\nSELECT bond_type\nFROM bond_counts\nWHERE count = (SELECT MAX(count) FROM bond_counts)\nLIMIT 1;"}
{"question_id": 417, "response": "WITH merged AS (\n    SELECT b.molecule_id\n    FROM bond b\n    INNER JOIN molecule m ON b.molecule_id = m.molecule_id\n    WHERE b.bond_type = '-' AND m.label = '-'\n)\nSELECT DISTINCT molecule_id \nFROM merged\nORDER BY molecule_id\nLIMIT 3;"}
{"question_id": 419, "response": "SELECT b.bond_type, c.atom_id, c.atom_id2\nFROM bond b\nINNER JOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_id = 'TR001_6_9'"}
{"question_id": 420, "response": "SELECT COUNT(bond_id)\nFROM connected \nWHERE atom_id LIKE '%19';"}
{"question_id": 423, "response": "WITH connected_with_p AS (\n    SELECT DISTINCT c.bond_id\n    FROM connected c\n    JOIN atom a ON c.atom_id = a.atom_id\n    WHERE a.element = 'p'\n)\nSELECT DISTINCT c.bond_id\nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id \nWHERE c.bond_id IN (SELECT bond_id FROM connected_with_p)\nAND a.element = 'n';"}
{"question_id": 424, "response": "WITH double_bonds_count AS (\n  SELECT molecule_id, COUNT(*) as count\n  FROM bond\n  WHERE bond_type = '='\n  GROUP BY molecule_id\n),\nmax_double_bond_molecule AS (\n  SELECT molecule_id\n  FROM double_bonds_count\n  ORDER BY count DESC\n  LIMIT 1\n)\nSELECT label\nFROM molecule\nWHERE molecule_id IN (SELECT molecule_id FROM max_double_bond_molecule)\nLIMIT 1;"}
{"question_id": 426, "response": "WITH bonded_atoms AS (\n  SELECT DISTINCT atom_id FROM connected\n)\nSELECT DISTINCT element \nFROM atom \nWHERE atom_id NOT IN (SELECT atom_id FROM bonded_atoms)"}
{"question_id": 427, "response": "SELECT DISTINCT a.atom_id, c.atom_id2\nFROM atom a\nINNER JOIN connected c ON a.atom_id = c.atom_id\nINNER JOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '#'\nAND b.molecule_id = 'TR041'"}
{"question_id": 428, "response": "SELECT a.element\nFROM connected c\nINNER JOIN atom a ON c.atom_id = a.atom_id\nWHERE c.bond_id = 'TR144_8_19'"}
{"question_id": 429, "response": "SELECT DISTINCT a.element\nFROM bond b\nINNER JOIN connected c ON b.bond_id = c.bond_id\nINNER JOIN atom a ON c.atom_id = a.atom_id\nWHERE b.bond_type = '#'"}
{"question_id": 432, "response": "WITH single_bond_molecules AS (\n    SELECT DISTINCT molecule_id \n    FROM bond \n    WHERE bond_type = '-'\n),\nfiltered_atoms AS (\n    SELECT * \n    FROM atom \n    WHERE molecule_id IN (SELECT molecule_id FROM single_bond_molecules)\n),\ncounts AS (\n    SELECT \n        COUNT(CASE WHEN element = 'cl' THEN atom_id END) AS cl_count,\n        COUNT(atom_id) AS total_count\n    FROM filtered_atoms\n)\nSELECT (cl_count::float / total_count * 100) AS result \nFROM counts;"}
{"question_id": 433, "response": "SELECT a.element\nFROM connected c\nINNER JOIN atom a ON c.atom_id = a.atom_id\nWHERE c.bond_id = 'TR001_10_11';"}
{"question_id": 435, "response": "SELECT DISTINCT element\nFROM atom a\nINNER JOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = '+'\nAND RIGHT(a.atom_id, 1) = '4'\nAND LENGTH(a.atom_id) = 7;"}
{"question_id": 437, "response": "WITH filtered_molecules AS (\n  SELECT m.molecule_id, COUNT(*) as atom_count\n  FROM molecule m\n  INNER JOIN atom a ON m.molecule_id = a.molecule_id\n  WHERE m.label = '-'\n  GROUP BY m.molecule_id\n  HAVING COUNT(*) > 5\n)\nSELECT molecule_id \nFROM filtered_molecules;"}
{"question_id": 439, "response": "SELECT s.cdscode \nFROM schools s \nINNER JOIN frpm f ON s.cdscode = f.cdscode\nWHERE (f.\"Enrollment (K-12)\" + f.\"Enrollment (Ages 5-17)\") > 500;"}
{"question_id": 440, "response": "WITH merged AS (\n  SELECT f.*, s.*\n  FROM frpm f\n  INNER JOIN satscores s ON f.cdscode = s.cds\n)\nSELECT MAX(\"Free Meal Count (Ages 5-17)\" / \"Enrollment (Ages 5-17)\") as result\nFROM merged \nWHERE CAST(numge1500 AS FLOAT) / CAST(numtsttakr AS FLOAT) > 0.3"}
{"question_id": 441, "response": "WITH merged AS (\n  SELECT s.*, sat.avgscrwrite\n  FROM schools s\n  INNER JOIN satscores sat ON s.cdscode = sat.cds\n),\nfiltered AS (\n  SELECT \n    charternum,\n    avgscrwrite,\n    RANK() OVER (ORDER BY avgscrwrite DESC) as writingscorerank\n  FROM merged\n  WHERE avgscrwrite > 499 \n  AND charternum IS NOT NULL\n)\nSELECT charternum, avgscrwrite, writingscorerank\nFROM filtered;"}
{"question_id": 442, "response": "SELECT s.school, s.street\nFROM schools s\nINNER JOIN frpm f ON s.cdscode = f.cdscode\nWHERE (f.\"Enrollment (K-12)\" - f.\"Enrollment (Ages 5-17)\") > 30;"}
{"question_id": 443, "response": "SELECT DISTINCT s.\"School Name\"\nFROM satscores s\nINNER JOIN frpm f ON s.cds = f.\"CDSCode\"\nWHERE (f.\"Free Meal Count (K-12)\" / f.\"Enrollment (K-12)\" > 0.1)\nAND s.numge1500 > 0;"}
{"question_id": 445, "response": "SELECT s.\"school\" as \"School Name\", s.street as \"Street\", s.city as \"City\", s.state as \"State\", s.zip as \"Zip\"\nFROM frpm f\nINNER JOIN schools s ON f.cdscode = s.cdscode\nWHERE f.\"County Name\" = 'Monterey'\nAND f.\"FRPM Count (Ages 5-17)\" > 800\nAND f.\"School Type\" = 'High Schools (Public)';"}
{"question_id": 447, "response": "WITH locally_funded AS (\n  SELECT f.*, s.school, s.doctype\n  FROM frpm f\n  INNER JOIN schools s ON f.cdscode = s.cdscode\n  WHERE s.fundingtype = 'Locally funded'\n),\nenrollment_diff AS (\n  SELECT *,\n         \"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\" AS enrollment_difference\n  FROM locally_funded\n),\navg_diff AS (\n  SELECT AVG(\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\") AS avg_difference\n  FROM locally_funded\n)\nSELECT school, doctype \nFROM enrollment_diff, avg_diff\nWHERE enrollment_difference > avg_difference;"}
{"question_id": 449, "response": "WITH merged AS (\n  SELECT f.*, s.*\n  FROM frpm f\n  INNER JOIN schools s ON f.\"CDSCode\" = s.\"cdscode\"\n),\nfiltered AS (\n  SELECT *,\n    \"FRPM Count (K-12)\" / \"Enrollment (K-12)\" AS \"Eligible Rate\"\n  FROM merged\n  WHERE \"soc\" = '66'\n)\nSELECT \"Eligible Rate\"\nFROM filtered\nORDER BY \"FRPM Count (K-12)\" DESC\nLIMIT 5;"}
{"question_id": 452, "response": "SELECT AVG(s.numtsttakr)\nFROM satscores s\nINNER JOIN schools sc ON s.cds = sc.cdscode \nWHERE EXTRACT(YEAR FROM sc.opendate) = 1980\nAND sc.county = 'Fresno';"}
{"question_id": 453, "response": "SELECT s.phone \nFROM satscores sat\nINNER JOIN schools s ON sat.cds = s.cdscode\nWHERE s.district = 'Fresno Unified'\nAND sat.avgscrread IS NOT NULL\nORDER BY sat.avgscrread ASC\nLIMIT 1;"}
{"question_id": 455, "response": "SELECT s.school, sc.avgscrwrite\nFROM satscores sc\nINNER JOIN schools s ON sc.cds = s.cdscode \nWHERE s.admfname1 = 'Ricci' AND s.admlname1 = 'Ulrich';"}
{"question_id": 456, "response": "WITH merged AS (\n    SELECT f.*, s.school, s.doc\n    FROM frpm f\n    INNER JOIN schools s ON f.cdscode = s.cdscode\n)\nSELECT school\nFROM merged\nWHERE doc = '31'\nORDER BY \"Enrollment (K-12)\" DESC\nLIMIT 1;"}
{"question_id": 457, "response": "SELECT COUNT(school)::float / 12\nFROM schools \nWHERE doc = '52' \nAND county = 'Alameda' \nAND EXTRACT(YEAR FROM opendate)::text = '1980';"}
{"question_id": 458, "response": "WITH filtered_schools AS (\n  SELECT * FROM schools \n  WHERE statustype = 'Merged' AND county = 'Orange'\n),\ncounts AS (\n  SELECT \n    SUM(CASE WHEN doc = '54' THEN 1 ELSE 0 END) AS unified_count,\n    SUM(CASE WHEN doc = '52' THEN 1 ELSE 0 END) AS elementary_count\n  FROM filtered_schools\n)\nSELECT CAST(unified_count AS FLOAT) / NULLIF(elementary_count, 0) AS result\nFROM counts;"}
{"question_id": 459, "response": "WITH sorted_schools AS (\n  SELECT s.mailstreet, s.school, ss.avgscrmath,\n  ROW_NUMBER() OVER (ORDER BY ss.avgscrmath DESC) as row_num\n  FROM satscores ss\n  INNER JOIN schools s ON ss.cds = s.cdscode\n)\nSELECT mailstreet, school \nFROM sorted_schools\nWHERE row_num = 7;"}
{"question_id": 463, "response": "WITH filtered_schools AS (\n  SELECT county, COUNT(*) as count\n  FROM schools\n  WHERE county IN ('San Diego', 'Santa Barbara')\n  AND virtual = 'F'\n  GROUP BY county\n)\nSELECT *\nFROM filtered_schools\nORDER BY count DESC\nLIMIT 1;"}
{"question_id": 464, "response": "SELECT gsoffered\nFROM schools\nWHERE ABS(longitude) = (SELECT MAX(ABS(longitude)) FROM schools)\nLIMIT 1;"}
{"question_id": 465, "response": "SELECT s.city, COUNT(f.cdscode) \nFROM frpm f \nINNER JOIN schools s ON f.cdscode = s.cdscode\nWHERE s.magnet = 1 \nAND s.gsoffered = 'K-8'\nAND f.\"NSLP Provision Status\" = 'Multiple Provision Types'\nGROUP BY s.city;"}
{"question_id": 467, "response": "SELECT s.admemail1, s.admemail2\nFROM frpm f\nINNER JOIN schools s ON f.cdscode = s.cdscode\nWHERE s.county = 'San Bernardino'\nAND s.city = 'San Bernardino'\nAND s.doc = '54'\nAND s.soc = '62'\nAND s.opendate BETWEEN '2009-01-01' AND '2010-12-31';"}
{"question_id": 468, "response": "SELECT COUNT(account_id)\nFROM district \nINNER JOIN account ON district.district_id = account.district_id\nWHERE district.a3 = 'east Bohemia' \nAND account.frequency = 'POPLATEK PO OBRATU'"}
{"question_id": 469, "response": "SELECT COUNT(DISTINCT c.district_id)\nFROM client c\nINNER JOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'F' \nAND d.a11 > 6000 \nAND d.a11 < 10000;"}
{"question_id": 471, "response": "WITH oldest_female_district AS (\n    SELECT district_id \n    FROM client \n    WHERE gender = 'F' \n    ORDER BY birth_date ASC \n    LIMIT 1\n),\ndistrict_gap AS (\n    SELECT MAX(a11) - MIN(a11) as gap\n    FROM district\n),\nmerged AS (\n    SELECT a.account_id, d.a11, a.district_id\n    FROM account a\n    JOIN district d ON a.district_id = d.district_id \n    JOIN disp di ON a.account_id = di.account_id\n    JOIN client c ON di.client_id = c.client_id\n)\nSELECT m.account_id, dg.gap\nFROM merged m\nCROSS JOIN district_gap dg\nWHERE m.district_id = (SELECT district_id FROM oldest_female_district)\nORDER BY m.a11 DESC\nLIMIT 1"}
{"question_id": 474, "response": "SELECT l.account_id\nFROM loan l\nINNER JOIN account a ON l.account_id = a.account_id\nWHERE l.duration > 12 \nAND EXTRACT(YEAR FROM a.date) = 1993\nORDER BY l.amount DESC\nLIMIT 1;"}
{"question_id": 475, "response": "SELECT COUNT(c.client_id)\nFROM district d\nINNER JOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F' \nAND c.birth_date < '1950-01-01'\nAND d.a2 = 'Sokolov'"}
{"question_id": 477, "response": "WITH merged AS (\n  SELECT c.*, d.a3, d.a4\n  FROM client c\n  INNER JOIN district d ON c.district_id = d.district_id\n),\nsouth_bohemia AS (\n  SELECT *\n  FROM merged\n  WHERE a3 = 'south Bohemia'\n),\ngrouped AS (\n  SELECT \n    a4,\n    SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) as male_clients,\n    COUNT(client_id) as total_clients,\n    (SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(client_id)) as percentage_male\n  FROM south_bohemia\n  GROUP BY a4\n)\nSELECT percentage_male\nFROM grouped\nORDER BY CAST(a4 AS INTEGER) DESC\nLIMIT 1;"}
{"question_id": 478, "response": "WITH loan_account AS (\n    SELECT account_id \n    FROM loan \n    WHERE date = '1993-07-05' \n    LIMIT 1\n),\nbalance_1998 AS (\n    SELECT COALESCE(SUM(balance), 0) as balance_1998_12_27\n    FROM trans \n    WHERE account_id = (SELECT account_id FROM loan_account)\n    AND date = '1998-12-27'\n),\nbalance_1993 AS (\n    SELECT COALESCE(SUM(balance), 0) as balance_1993_03_22\n    FROM trans \n    WHERE account_id = (SELECT account_id FROM loan_account)\n    AND date = '1993-03-22'\n)\nSELECT ((balance_1998_12_27 - balance_1993_03_22)::float / NULLIF(balance_1993_03_22, 0)) * 100 as result\nFROM balance_1998, balance_1993;"}
{"question_id": 479, "response": "WITH total AS (\n  SELECT SUM(amount) as total_amount FROM loan\n),\nno_issue AS (\n  SELECT SUM(amount) as amount_no_issue FROM loan WHERE status = 'A'\n)\nSELECT (amount_no_issue * 100.0) / total_amount as result\nFROM total, no_issue;"}
{"question_id": 480, "response": "WITH filtered_loan AS (\n    SELECT * FROM loan WHERE amount < 100000\n)\nSELECT \n    (CAST(SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) AS DECIMAL) * 100.0) / \n    COUNT(account_id) AS result\nFROM filtered_loan;"}
{"question_id": 485, "response": "WITH second_highest AS (\n    SELECT a15\n    FROM district\n    ORDER BY a15 DESC\n    LIMIT 1 OFFSET 1\n)\nSELECT COUNT(c.client_id)\nFROM client c\nINNER JOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'M' \nAND d.a15 = (SELECT a15 FROM second_highest);"}
{"question_id": 488, "response": "SELECT DISTINCT merged_df2.account_id\nFROM district\nINNER JOIN account ON district.district_id = account.district_id\nINNER JOIN disp ON account.account_id = disp.account_id\nWHERE disp.type = 'OWNER' AND district.a2 = 'Tabor';"}
{"question_id": 490, "response": "SELECT d2.type\nFROM district d1\nINNER JOIN account a ON d1.district_id = a.district_id\nINNER JOIN disp d2 ON a.account_id = d2.account_id\nWHERE d2.type != 'OWNER' \nAND d1.a11 BETWEEN 8000 AND 9000;"}
{"question_id": 493, "response": "WITH filtered_data AS (\n    SELECT d.*, c.*\n    FROM district d\n    INNER JOIN client c ON d.district_id = c.district_id\n    WHERE d.a11 > 10000\n)\nSELECT (COUNT(CASE WHEN gender = 'F' THEN 1 END) * 100.0 / COUNT(client_id)) as percentage_women\nFROM filtered_data;"}
{"question_id": 497, "response": "WITH merged AS (\n    SELECT DISTINCT a.account_id\n    FROM client c\n    INNER JOIN district d ON c.district_id = d.district_id\n    INNER JOIN account a ON d.district_id = a.district_id\n    INNER JOIN disp di ON c.client_id = di.client_id AND a.account_id = di.account_id\n    WHERE c.gender = 'F'\n    ORDER BY c.birth_date ASC, d.a11 ASC\n    LIMIT 1\n)\nSELECT account_id FROM merged;"}
{"question_id": 498, "response": "SELECT AVG(l.amount)\nFROM account a\nINNER JOIN loan l ON a.account_id = l.account_id\nWHERE l.status IN ('C', 'D')\nAND a.frequency = 'POPLATEK PO OBRATU';"}
{"question_id": 499, "response": "WITH current_year AS (\n    SELECT EXTRACT(YEAR FROM CURRENT_DATE) as year\n)\nSELECT \n    d.client_id,\n    EXTRACT(YEAR FROM current_year.year) - EXTRACT(YEAR FROM c.birth_date) as age\nFROM disp d\nINNER JOIN card ca ON d.disp_id = ca.disp_id \nINNER JOIN client c ON d.client_id = c.client_id\nCROSS JOIN current_year\nWHERE d.type = 'OWNER' AND ca.type = 'gold';"}
